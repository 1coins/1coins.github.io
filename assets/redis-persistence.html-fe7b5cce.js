import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as i,e as s,a as e,b as a}from"./app-3e6d2d9d.js";const d={},t=s(`<h1 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h1><ul><li><p>什么是持久化？</p><ul><li>利用永久性存储介质将数据进行保存，在特定的时间将保存的数据进行恢复的工作机制称为持久化。</li></ul></li><li><p>为什么要进行持久化？</p><ul><li>防止数据的意外丢失，确保数据安全性</li></ul></li><li><p>持久化过程保存什么？</p><ul><li><code>RDB</code>：将当前数据状态进行保存，快照形式，存储数据结果，存储格式简单，关注点在数据</li><li><code>AOF</code>：将数据的操作过程进行保存，日志形式，存储操作过程，存储格式复杂，关注点在数据的操作过程</li></ul></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-persistence/rdb-and-aof.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="rdb" tabindex="-1"><a class="header-anchor" href="#rdb" aria-hidden="true">#</a> RDB</h1><h2 id="启动方式" tabindex="-1"><a class="header-anchor" href="#启动方式" aria-hidden="true">#</a> 启动方式</h2><p>保存数据即是做一件事，也就是：谁，什么时间，干什么事情。</p><h3 id="命令执行" tabindex="-1"><a class="header-anchor" href="#命令执行" aria-hidden="true">#</a> 命令执行</h3><ul><li>谁：<code>Redis</code>操作者（用户）</li><li>什么时间：即时（随时进行）</li><li>干什么事情：保存数据</li></ul><h4 id="save-指令" tabindex="-1"><a class="header-anchor" href="#save-指令" aria-hidden="true">#</a> save 指令</h4><ul><li><p>命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>作用</p><ul><li>手动执行一次保存操作</li><li>数据默认保存在根目录下的<code>dump.rdb</code></li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name <span class="token number">123</span>
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> save
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> age <span class="token number">39</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="save-指令相关配置" tabindex="-1"><a class="header-anchor" href="#save-指令相关配置" aria-hidden="true">#</a> save 指令相关配置</h4><p>配置文件即为<code>redis-6379.conf</code>。</p><ul><li><p><code>dbfilename dump.rdb</code></p><ul><li>说明：设置本地数据库文件名，默认值为<code>dump.rdb</code></li><li>经验：通常设置为<code>dump-端口号.rdb</code></li></ul></li><li><p><code>dir</code></p><ul><li>说明：设置存储<code>.rdb</code>文件的路径</li><li>经验：通常设置成存储空间较大的目录中，目录名称<code>data</code></li></ul></li><li><p><code>rdbcompression yes</code></p><ul><li>说明：设置存储至本地数据库时是否压缩数据，默认为<code>yes</code>，采用<code>LZF</code>压缩</li><li>经验：通常默认为开启状态，如果设置为<code>no</code>，可以节省<code>CPU</code>运行时间，但会使存储的文件变大（巨大）</li></ul></li><li><p><code>rdbchecksum yes</code></p><ul><li>说明：设置是否进行<code>RDB</code>文件格式校验，该校验过程在写文件和读文件过程均进行</li><li>经验：通常默认为开启状态，如果设置为<code>no</code>，可以节约读写性过程约 10% 时间消耗，但是存储一定的数据损坏风险</li></ul></li></ul><h4 id="数据恢复" tabindex="-1"><a class="header-anchor" href="#数据恢复" aria-hidden="true">#</a> 数据恢复</h4><p>使用<code>save</code>命令保存后，如果突然断电，会在重启时加载<code>.rdb</code>文件恢复数据。</p><h4 id="save-指令工作原理" tabindex="-1"><a class="header-anchor" href="#save-指令工作原理" aria-hidden="true">#</a> save 指令工作原理</h4><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-persistence/save-operate-principle.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>注意：<code>save</code>指令的执行会阻塞当前<code>Redis</code>服务器，直到当前<code>RDB</code>过程完成为止，有可能会造成长时间阻塞，线上环境不建议使用。</p><h3 id="后台执行" tabindex="-1"><a class="header-anchor" href="#后台执行" aria-hidden="true">#</a> 后台执行</h3><p>场景：数据量过大，单线程执行方式造成效率过低</p><ul><li>谁：<code>Redis</code>操作者（用户）发起指令；<code>Redis</code>服务器控制指令执行</li><li>什么时间：即时（发起）；合理的时间（执行）</li><li>干什么事情：保存</li></ul><h4 id="bgsave-指令" tabindex="-1"><a class="header-anchor" href="#bgsave-指令" aria-hidden="true">#</a> bgsave 指令</h4><ul><li><p>命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bgsave
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>作用</p><ul><li>手动启动后台保存操作，但不是立即执行</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name <span class="token number">123</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> save
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> age <span class="token number">39</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> save
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> addr beijing
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> bgsave
Background saving started
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="bgsave-指令相关配置" tabindex="-1"><a class="header-anchor" href="#bgsave-指令相关配置" aria-hidden="true">#</a> bgsave 指令相关配置</h4><ul><li><p><code>dbfilename dump.rdb</code></p></li><li><p><code>dir</code></p></li><li><p><code>rdbcompression yes</code></p></li><li><p><code>rdbchecksum yes</code></p></li><li><p><code>stop-writes-on-bgsave-error yes</code></p><ul><li>说明：后台存储过程中如果出现错误现象，是否停止保存操作</li><li>经验：通常默认为开启状态</li></ul></li></ul><h4 id="bgsave-指令工作原理" tabindex="-1"><a class="header-anchor" href="#bgsave-指令工作原理" aria-hidden="true">#</a> bgsave 指令工作原理</h4><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-persistence/bgsave-operate-principle.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>注意： <code>bgsave</code>命令是针对<code>save</code>阻塞问题做的优化；<code>Redis</code>内部所有涉及到<code>RDB</code>操作都采用<code>bgsave</code>的方式，<code>save</code>命令可以放弃使用。</p><h3 id="自动执行" tabindex="-1"><a class="header-anchor" href="#自动执行" aria-hidden="true">#</a> 自动执行</h3><p>场景：反复执行保存指令，忘记了怎么办？不知道数据产生了多少变化，何时保存？</p><ul><li>谁：<code>Redis</code>服务器发起指令（基于条件）</li><li>什么时间：满足条件</li><li>干什么事情：保存数据</li></ul><h4 id="save-配置" tabindex="-1"><a class="header-anchor" href="#save-配置" aria-hidden="true">#</a> save 配置</h4><ul><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>save second chang
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>作用</p><ul><li>满足限定时间范围内<code>key</code>的变化数量达到指定数量即进行持久化</li></ul></li><li><p>参数</p><ul><li><code>second</code>：监控时间范围</li><li><code>changes</code>：监控<code>key</code>的变化量</li></ul></li><li><p>位置</p><ul><li>在<code>conf</code>文件中进行配置</li></ul></li><li><p>范例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>save <span class="token number">900</span> <span class="token number">1</span>
save <span class="token number">300</span> <span class="token number">10</span>
save <span class="token number">60</span> <span class="token number">10000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="save-配置原理" tabindex="-1"><a class="header-anchor" href="#save-配置原理" aria-hidden="true">#</a> save 配置原理</h4><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-persistence/save-config-operate-principle.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>注意：</p><ul><li><code>save</code>配置要根据实际业务情况进行设置，频度过高或过低都会出现性能问题，结果可能是灾难性的</li><li><code>save</code>配置中对于<code>second</code>与<code>changes</code>设置通常具有互补对应关系，尽量不要设置成包含性关系</li><li><code>save</code>配置启动后执行的是<code>bgsave</code>操作</li></ul><h3 id="三种启动方式对比" tabindex="-1"><a class="header-anchor" href="#三种启动方式对比" aria-hidden="true">#</a> 三种启动方式对比</h3><table><thead><tr><th style="text-align:center;">方式</th><th style="text-align:center;"><code>save</code>指令</th><th style="text-align:center;"><code>bgsave</code>指令</th></tr></thead><tbody><tr><td style="text-align:center;">读写</td><td style="text-align:center;">同步</td><td style="text-align:center;">异步</td></tr><tr><td style="text-align:center;">阻塞客户端指令</td><td style="text-align:center;">是</td><td style="text-align:center;">否</td></tr><tr><td style="text-align:center;">额外内存消耗</td><td style="text-align:center;">否</td><td style="text-align:center;">是</td></tr><tr><td style="text-align:center;">启动新进程</td><td style="text-align:center;">否</td><td style="text-align:center;">是</td></tr></tbody></table><h2 id="特殊启动方式" tabindex="-1"><a class="header-anchor" href="#特殊启动方式" aria-hidden="true">#</a> 特殊启动方式</h2><ul><li><p>全量复制</p><ul><li>把一个<code>Redis</code>服务器中的数据复制给别人，要先存储才能复制，而且存储的是全数据，因此<code>RDB</code>是解决方案</li><li>在主从复制中详细讲解</li></ul></li><li><p>服务器运行过程中重启</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>debug reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>关闭服务器时指定保存数据</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">shutdown</span> save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>注意：默认情况下执行<code>shutdown</code>命令时，自动执行<code>bgsave</code>（如果没有开启<code>AOF</code>持久化功能）</p><h3 id="rdb-优点" tabindex="-1"><a class="header-anchor" href="#rdb-优点" aria-hidden="true">#</a> RDB 优点</h3><ul><li><code>RDB</code>是一个紧凑压缩的二进制文件，存储效率较高</li><li><code>RDB</code>内部存储的是<code>Redis</code>在某个时间点的数据快照，非常适合用于数据备份，全量复制等场景</li><li><code>RDB</code>恢复数据的速度要比<code>AOF</code>快很多</li><li>应用：服务器中每<code>X</code>小时执行<code>bgsave</code>备份，并将<code>RDB</code>文件拷贝到远程机器中，用于灾难恢复</li></ul><h3 id="rdb-缺点" tabindex="-1"><a class="header-anchor" href="#rdb-缺点" aria-hidden="true">#</a> RDB 缺点</h3><ul><li><code>RDB</code>方式无论是执行指令还是利用配置，无法做到实时持久化，具有较大的可能性丢失数据</li><li><code>bgsave</code>指令每次运行要执行<code>fork</code>操作创建子进程，要牺牲掉一些性能</li><li><code>Redis</code>的众多版本中未进行<code>RDB</code>文件格式的版本统一，有可能出现各版本服务之间数据格式无法兼容现象</li></ul><h1 id="aof" tabindex="-1"><a class="header-anchor" href="#aof" aria-hidden="true">#</a> AOF</h1><h2 id="rdb-存储的弊端" tabindex="-1"><a class="header-anchor" href="#rdb-存储的弊端" aria-hidden="true">#</a> RDB 存储的弊端</h2><ul><li><p>存储数据量较大，效率较低</p><ul><li>基于快照思想，每次读写都是全部数据，当数据量巨大时，效率非常低</li></ul></li><li><p>大数据量下的<code>IO</code>性能较低</p></li><li><p>基于<code>fork</code>创建子进程，内存产生额外消耗</p></li><li><p>宕机带来的数据丢失风险</p></li></ul><h3 id="解决思路" tabindex="-1"><a class="header-anchor" href="#解决思路" aria-hidden="true">#</a> 解决思路</h3><ul><li>不写全数据，仅记录部分数据</li><li>降低区分数据是否改变的难度，改记录数据为记录操作过程</li><li>对所有操作均进行记录，排除丢失数据的风险</li></ul><h2 id="aof-概念" tabindex="-1"><a class="header-anchor" href="#aof-概念" aria-hidden="true">#</a> AOF 概念</h2><ul><li><code>AOF</code>（<code>append only file</code>）持久化：以独立日志的方式记录每次写命令，重启时再重新执行<code>AOF</code>文件中命令达到恢复数据的目的。与<code>RDB</code>相比可以简单描述为<strong>改记录数据为记录数据产生的过程</strong></li><li><code>AOF</code>的主要作用是解决了数据持久化的实时性，目前已经是<code>Redis</code>持久化的主流方式</li></ul><h2 id="aof-写数据过程" tabindex="-1"><a class="header-anchor" href="#aof-写数据过程" aria-hidden="true">#</a> AOF 写数据过程</h2><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-persistence/aof-rite-data-process.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>注意：将命令同步到<code>AOF</code>文件中时，需要明确一次写多少条数据、多久写一次数据等问题。</p><h2 id="aof-写数据三种策略-appendfsync" tabindex="-1"><a class="header-anchor" href="#aof-写数据三种策略-appendfsync" aria-hidden="true">#</a> AOF 写数据三种策略（appendfsync）</h2><ul><li><p><code>always</code>（每次）</p><ul><li>每次写入操作均同步到AOF文件中，<strong>数据零误差，性能较低</strong>，不建议使用</li></ul></li><li><p><code>everysec</code>（每秒）</p><ul><li>每秒将缓冲区中的指令同步到<code>AOF</code>文件中，<strong>数据准确性较高，性能较高</strong>，但在系统突然宕机的情况下丢失 1 秒内的数据，建议使用，也是默认配置</li></ul></li><li><p><code>no</code>（系统控制）</p><ul><li>由操作系统控制每次同步到<code>AOF</code>文件的周期，整体过程<strong>不可控</strong></li></ul></li></ul><h2 id="aof-功能开启" tabindex="-1"><a class="header-anchor" href="#aof-功能开启" aria-hidden="true">#</a> AOF 功能开启</h2><ul><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>appendonly <span class="token function">yes</span><span class="token operator">|</span>no
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>作用</p><ul><li>是否开启AOF持久化功能，默认为不开启状态</li></ul></li><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>appendfsync always<span class="token operator">|</span>everysec<span class="token operator">|</span>no
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>作用</p><ul><li><code>AOF</code>写数据策略</li></ul></li></ul><h2 id="aof-相关配置" tabindex="-1"><a class="header-anchor" href="#aof-相关配置" aria-hidden="true">#</a> AOF 相关配置</h2><ul><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>appendfilename filename
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>作用</p><ul><li><code>AOF</code>持久化文件名，默认文件名为<code>appendonly.aof</code>，建议配置为<code>appendonly-端口号.aof</code></li></ul></li><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">dir</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>作用</p><ul><li>AOF持久化文件保存路径，与<code>RDB</code>持久化文件保持一致即可</li></ul></li></ul><h2 id="aof-重写" tabindex="-1"><a class="header-anchor" href="#aof-重写" aria-hidden="true">#</a> AOF 重写</h2><p>随着命令不断写入<code>AOF</code>，文件会越来越大，为了解决这个问题，<code>Redis</code>引入了<code>AOF</code>重写机制压缩文件体积。<code>AOF</code>文件重写是将<code>Redis</code>进程内的数据转化为写命令同步到新<code>AOF</code>文件的过程。简单说就是<strong>将对同一个数据的若干个条命令执行结果转化成最终结果数据对应的指令进行记录</strong>。</p><h3 id="aof-重写作用" tabindex="-1"><a class="header-anchor" href="#aof-重写作用" aria-hidden="true">#</a> AOF 重写作用</h3><ul><li>降低磁盘占用量，提高磁盘利用率</li><li>提高持久化效率，降低持久化写时间，提高IO性能</li><li>降低数据恢复用时，提高数据恢复效率</li></ul><h3 id="aof-重写规则" tabindex="-1"><a class="header-anchor" href="#aof-重写规则" aria-hidden="true">#</a> AOF 重写规则</h3><ul><li>进程内已超时的数据不再写入文件</li><li>忽略无效指令，重写时使用进程内数据直接生成，这样新的<code>AOF</code>文件只保留最终数据的写入命令<br> 如：<code>del key1</code>、 <code>hdel key2</code>、<code>srem key3</code>、<code>set key4 111</code>、<code>set key4 222</code>等</li><li>对同一数据的多条写命令合并为一条命令。如：<code>lpush list1 a</code>、<code>lpush list1 b</code>、 <code>lpush list1 c</code>可以转化为：<code>lpush list1 a b c</code>。为防止数据量过大造成客户端缓冲区溢出，对<code>list</code>、<code>set</code>、<code>hash</code>、<code>zset</code>等类型，每条指令最多写入 64 个元素</li></ul><h3 id="aof-重写方式" tabindex="-1"><a class="header-anchor" href="#aof-重写方式" aria-hidden="true">#</a> AOF 重写方式</h3><h4 id="手动重写" tabindex="-1"><a class="header-anchor" href="#手动重写" aria-hidden="true">#</a> 手动重写</h4><ul><li><p>命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bgrewriteaof
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name <span class="token number">123</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name <span class="token number">234</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name <span class="token number">345</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> bgreweiteaof
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="bgrewriteaof-指令工作原理" tabindex="-1"><a class="header-anchor" href="#bgrewriteaof-指令工作原理" aria-hidden="true">#</a> bgrewriteaof 指令工作原理</h5><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-persistence/bgrewriteaof-operate-principle.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="自动重写" tabindex="-1"><a class="header-anchor" href="#自动重写" aria-hidden="true">#</a> 自动重写</h4>`,77),r=e("ul",null,[e("li",null,[e("p",null,"配置"),e("ul",null,[e("li",null,[e("p",null,"自动重写触发条件设置"),e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`auto-aof-rewrite-min-size size
auto-aof-rewrite-percentage percentage
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])])]),e("li",null,[e("p",null,[a("自动重写触发比对参数（ 运行指令"),e("code",null,"info Persistence"),a("获取具体信息 ）")]),e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`aof_current_size
aof_base_size
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])])]),e("li",null,[e("p",null,"自动重写触发条件"),e("p",{class:"katex-block"},[e("span",{class:"katex-display"},[e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[e("semantics",null,[e("mtable",{rowspacing:"0.25em",columnalign:"right left",columnspacing:"0em"},[e("mtr",null,[e("mtd",null,[e("mstyle",{scriptlevel:"0",displaystyle:"true"},[e("mrow",null,[e("mi",null,"a"),e("mi",null,"o"),e("mi",null,"f"),e("mi",{mathvariant:"normal"},"_"),e("mi",null,"c"),e("mi",null,"u"),e("mi",null,"r"),e("mi",null,"r"),e("mi",null,"e"),e("mi",null,"n"),e("mi",null,"t"),e("mi",{mathvariant:"normal"},"_"),e("mi",null,"s"),e("mi",null,"i"),e("mi",null,"z"),e("mi",null,"e")])])]),e("mtd",null,[e("mstyle",{scriptlevel:"0",displaystyle:"true"},[e("mrow",null,[e("mrow"),e("mo",null,">"),e("mi",null,"a"),e("mi",null,"u"),e("mi",null,"t"),e("mi",null,"o"),e("mo",null,"−"),e("mi",null,"a"),e("mi",null,"o"),e("mi",null,"f"),e("mo",null,"−"),e("mi",null,"r"),e("mi",null,"e"),e("mi",null,"w"),e("mi",null,"r"),e("mi",null,"i"),e("mi",null,"t"),e("mi",null,"e"),e("mo",null,"−"),e("mi",null,"m"),e("mi",null,"i"),e("mi",null,"n"),e("mo",null,"−"),e("mi",null,"s"),e("mi",null,"i"),e("mi",null,"z"),e("mi",null,"e"),e("mi",null,"s"),e("mi",null,"i"),e("mi",null,"z"),e("mi",null,"e")])])])]),e("mtr",null,[e("mtd",null,[e("mstyle",{scriptlevel:"0",displaystyle:"true"},[e("mfrac",null,[e("mrow",null,[e("mo",{stretchy:"false"},"("),e("mi",null,"a"),e("mi",null,"o"),e("mi",null,"f"),e("mi",{mathvariant:"normal"},"_"),e("mi",null,"c"),e("mi",null,"u"),e("mi",null,"r"),e("mi",null,"r"),e("mi",null,"e"),e("mi",null,"n"),e("mi",null,"t"),e("mi",{mathvariant:"normal"},"_"),e("mi",null,"s"),e("mi",null,"i"),e("mi",null,"z"),e("mi",null,"e"),e("mo",null,"−"),e("mi",null,"a"),e("mi",null,"o"),e("mi",null,"f"),e("mi",{mathvariant:"normal"},"_"),e("mi",null,"b"),e("mi",null,"a"),e("mi",null,"s"),e("mi",null,"e"),e("mi",{mathvariant:"normal"},"_"),e("mi",null,"s"),e("mi",null,"i"),e("mi",null,"z"),e("mi",null,"e"),e("mo",{stretchy:"false"},")")]),e("mrow",null,[e("mi",null,"a"),e("mi",null,"o"),e("mi",null,"f"),e("mi",{mathvariant:"normal"},"_"),e("mi",null,"b"),e("mi",null,"a"),e("mi",null,"s"),e("mi",null,"e"),e("mi",{mathvariant:"normal"},"_"),e("mi",null,"s"),e("mi",null,"i"),e("mi",null,"z"),e("mi",null,"e")])])])]),e("mtd",null,[e("mstyle",{scriptlevel:"0",displaystyle:"true"},[e("mrow",null,[e("mrow"),e("mo",null,"≥"),e("mi",null,"a"),e("mi",null,"u"),e("mi",null,"t"),e("mi",null,"o"),e("mo",null,"−"),e("mi",null,"a"),e("mi",null,"o"),e("mi",null,"f"),e("mo",null,"−"),e("mi",null,"r"),e("mi",null,"e"),e("mi",null,"w"),e("mi",null,"r"),e("mi",null,"i"),e("mi",null,"t"),e("mi",null,"e"),e("mo",null,"−"),e("mi",null,"p"),e("mi",null,"e"),e("mi",null,"r"),e("mi",null,"c"),e("mi",null,"e"),e("mi",null,"n"),e("mi",null,"t"),e("mi",null,"a"),e("mi",null,"g"),e("mi",null,"e"),e("mi",null,"p"),e("mi",null,"e"),e("mi",null,"r"),e("mi",null,"c"),e("mi",null,"e"),e("mi",null,"n"),e("mi",null,"t"),e("mi",null,"a"),e("mi",null,"g"),e("mi",null,"e")])])])])]),e("annotation",{encoding:"application/x-tex"}," \\begin{aligned} aof\\_current\\_size &> auto-aof-rewrite-min-size size \\\\ \\frac {(aof\\_current\\_size - aof\\_base\\_size)} {aof\\_base\\_size} &\\ge auto-aof-rewrite-percentage percentage \\end{aligned} ")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"4.246em","vertical-align":"-1.873em"}}),e("span",{class:"mord"},[e("span",{class:"mtable"},[e("span",{class:"col-align-r"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"2.373em"}},[e("span",{style:{top:"-4.983em"}},[e("span",{class:"pstrut",style:{height:"3.45em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"o"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),e("span",{class:"mord",style:{"margin-right":"0.02778em"}},"_"),e("span",{class:"mord mathnormal"},"c"),e("span",{class:"mord mathnormal"},"u"),e("span",{class:"mord mathnormal"},"rre"),e("span",{class:"mord mathnormal"},"n"),e("span",{class:"mord mathnormal"},"t"),e("span",{class:"mord",style:{"margin-right":"0.02778em"}},"_"),e("span",{class:"mord mathnormal"},"s"),e("span",{class:"mord mathnormal"},"i"),e("span",{class:"mord mathnormal"},"ze")])]),e("span",{style:{top:"-2.873em"}},[e("span",{class:"pstrut",style:{height:"3.45em"}}),e("span",{class:"mord"},[e("span",{class:"mord"},[e("span",{class:"mopen nulldelimiter"}),e("span",{class:"mfrac"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"1.45em"}},[e("span",{style:{top:"-2.314em"}},[e("span",{class:"pstrut",style:{height:"3em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"o"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),e("span",{class:"mord",style:{"margin-right":"0.02778em"}},"_"),e("span",{class:"mord mathnormal"},"ba"),e("span",{class:"mord mathnormal"},"se"),e("span",{class:"mord",style:{"margin-right":"0.02778em"}},"_"),e("span",{class:"mord mathnormal"},"s"),e("span",{class:"mord mathnormal"},"i"),e("span",{class:"mord mathnormal"},"ze")])]),e("span",{style:{top:"-3.23em"}},[e("span",{class:"pstrut",style:{height:"3em"}}),e("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),e("span",{style:{top:"-3.7em"}},[e("span",{class:"pstrut",style:{height:"3em"}}),e("span",{class:"mord"},[e("span",{class:"mopen"},"("),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"o"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),e("span",{class:"mord",style:{"margin-right":"0.02778em"}},"_"),e("span",{class:"mord mathnormal"},"c"),e("span",{class:"mord mathnormal"},"u"),e("span",{class:"mord mathnormal"},"rre"),e("span",{class:"mord mathnormal"},"n"),e("span",{class:"mord mathnormal"},"t"),e("span",{class:"mord",style:{"margin-right":"0.02778em"}},"_"),e("span",{class:"mord mathnormal"},"s"),e("span",{class:"mord mathnormal"},"i"),e("span",{class:"mord mathnormal"},"ze"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"−"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"o"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),e("span",{class:"mord",style:{"margin-right":"0.02778em"}},"_"),e("span",{class:"mord mathnormal"},"ba"),e("span",{class:"mord mathnormal"},"se"),e("span",{class:"mord",style:{"margin-right":"0.02778em"}},"_"),e("span",{class:"mord mathnormal"},"s"),e("span",{class:"mord mathnormal"},"i"),e("span",{class:"mord mathnormal"},"ze"),e("span",{class:"mclose"},")")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.996em"}},[e("span")])])])]),e("span",{class:"mclose nulldelimiter"})])])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"1.873em"}},[e("span")])])])]),e("span",{class:"col-align-l"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"2.373em"}},[e("span",{style:{top:"-4.983em"}},[e("span",{class:"pstrut",style:{height:"3.45em"}}),e("span",{class:"mord"},[e("span",{class:"mord"}),e("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),e("span",{class:"mrel"},">"),e("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"u"),e("span",{class:"mord mathnormal"},"t"),e("span",{class:"mord mathnormal"},"o"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"−"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"o"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"−"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mord mathnormal"},"re"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),e("span",{class:"mord mathnormal"},"i"),e("span",{class:"mord mathnormal"},"t"),e("span",{class:"mord mathnormal"},"e"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"−"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mord mathnormal"},"min"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"−"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mord mathnormal"},"s"),e("span",{class:"mord mathnormal"},"i"),e("span",{class:"mord mathnormal"},"zes"),e("span",{class:"mord mathnormal"},"i"),e("span",{class:"mord mathnormal"},"ze")])]),e("span",{style:{top:"-2.873em"}},[e("span",{class:"pstrut",style:{height:"3.45em"}}),e("span",{class:"mord"},[e("span",{class:"mord"}),e("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),e("span",{class:"mrel"},"≥"),e("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"u"),e("span",{class:"mord mathnormal"},"t"),e("span",{class:"mord mathnormal"},"o"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"−"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"o"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"−"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mord mathnormal"},"re"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),e("span",{class:"mord mathnormal"},"i"),e("span",{class:"mord mathnormal"},"t"),e("span",{class:"mord mathnormal"},"e"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"−"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mord mathnormal"},"p"),e("span",{class:"mord mathnormal"},"erce"),e("span",{class:"mord mathnormal"},"n"),e("span",{class:"mord mathnormal"},"t"),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),e("span",{class:"mord mathnormal"},"e"),e("span",{class:"mord mathnormal"},"p"),e("span",{class:"mord mathnormal"},"erce"),e("span",{class:"mord mathnormal"},"n"),e("span",{class:"mord mathnormal"},"t"),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),e("span",{class:"mord mathnormal"},"e")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"1.873em"}},[e("span")])])])])])])])])])])])])])])],-1),c=s('<h3 id="aof-重写流程" tabindex="-1"><a class="header-anchor" href="#aof-重写流程" aria-hidden="true">#</a> AOF 重写流程</h3><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-persistence/aof-rewrite-process1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-persistence/aof-rewrite-process2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>AOF</code>缓冲区同步文件策略，由参数<code>appendfsync</code>控制。</p><p>系统调用<code>write</code>和<code>fsync</code>说明：</p><ul><li><code>write</code>操作会触发延迟写（<code>delayed write</code>）机制，<code>Linux</code>在内核提供页缓冲区用来提高硬盘<code>IO</code>性能；<code>write</code>操作在写入系统缓冲区后直接返回，同步硬盘操作依赖于系统调度机制，列如：缓冲区页空间写满或达到特定时间周期；同步文件之前，如果此时系统故障宕机，缓冲区内数据将丢失</li><li><code>fsync</code>针对单个文件操作（比如<code>AOF</code>文件），做强制硬盘同步，<code>fsync</code>将阻塞直到写入硬盘完成后返回，保证了数据持久化</li></ul><p>除了<code>write</code>、<code>fsync</code>、<code>Linux</code>还提供了<code>sync</code>、<code>fdatasync</code>操作。</p><h1 id="rdb-与-aof-区别" tabindex="-1"><a class="header-anchor" href="#rdb-与-aof-区别" aria-hidden="true">#</a> RDB 与 AOF 区别</h1><table><thead><tr><th style="text-align:center;">持久化方式</th><th style="text-align:center;"><code>RDB</code></th><th style="text-align:center;"><code>AOF</code></th></tr></thead><tbody><tr><td style="text-align:center;">占用存储空间</td><td style="text-align:center;">小（数据级：压缩）</td><td style="text-align:center;">大（指令级：重写）</td></tr><tr><td style="text-align:center;">存储速度</td><td style="text-align:center;">慢</td><td style="text-align:center;">快</td></tr><tr><td style="text-align:center;">恢复速度</td><td style="text-align:center;">快</td><td style="text-align:center;">慢</td></tr><tr><td style="text-align:center;">数据安全性</td><td style="text-align:center;">会丢失数据</td><td style="text-align:center;">依据策略决定</td></tr><tr><td style="text-align:center;">资源消耗</td><td style="text-align:center;">高/重量级</td><td style="text-align:center;">低/轻量级</td></tr><tr><td style="text-align:center;">启动优先级</td><td style="text-align:center;">低</td><td style="text-align:center;">高</td></tr></tbody></table><h2 id="rdb-与-aof-的选择" tabindex="-1"><a class="header-anchor" href="#rdb-与-aof-的选择" aria-hidden="true">#</a> RDB 与 AOF 的选择</h2><ul><li><p>对数据非常敏感，建议使用默认的<code>AOF</code>持久化方案</p><ul><li><code>AOF</code>持久化策略使用<code>everysecond</code>，每秒钟<code>fsync</code>一次。该策略<code>redis</code>仍可以保持很好的处理性能，当出现问题时，最多丢失 0-1 秒内的数据。</li><li>注意：由于<code>AOF</code>文件存储体积较大，且恢复速度较慢</li></ul></li><li><p>数据呈现阶段有效性，建议使用<code>RDB</code>持久化方案</p><ul><li>数据可以良好的做到阶段内无丢失（该阶段是开发者或运维人员手工维护的），且恢复速度较快，阶段点数据恢复通常采用<code>RDB</code>方案</li><li>注意：利用<code>RDB</code>实现紧凑的数据持久化会使<code>Redis</code>降的很低，慎重</li></ul></li><li><p>综合比对</p><ul><li><code>RDB</code>与<code>AOF</code>的选择实际上是在做一种权衡，每种都有利有弊</li><li>如不能承受数分钟以内的数据丢失，对业务数据非常敏感，选用<code>AOF</code></li><li>如能承受数分钟以内的数据丢失，且追求大数据集的恢复速度，选用<code>RDB</code></li><li>灾难恢复选用<code>RDB</code></li><li>双保险策略，同时开启<code>RDB</code>和<code>AOF</code>，重启后，<code>Redis</code>优先使用<code>AOF</code>来恢复数据，降低丢失数据的量</li></ul></li></ul><h1 id="持久化应用场景" tabindex="-1"><a class="header-anchor" href="#持久化应用场景" aria-hidden="true">#</a> 持久化应用场景</h1><ul><li><s><code>Tips 1</code></s><s>：</s>~~<code>redis</code>~~<s>用于控制数据库表主键id，为数据库表主键提供生成策略，保障数据库表的主键唯一性</s></li><li><s><code>Tips 3</code></s><s>：</s>~~<code>redis</code>~~<s>应用于各种结构型和非结构型高热度数据访问加速</s></li><li><s><code>Tips 4</code></s><s>：</s>~~<code>redis</code>~~<s>应用于购物车数据存储设计</s></li><li><code>Tips 5</code>：<code>redis</code>应用于抢购，限购类、限量发放优惠卷、激活码等业务的数据存储设计</li><li><code>Tips 6</code>：<code>redis</code>应用于具有操作先后顺序的数据控制</li><li><code>Tips 7</code>：<code>redis</code>应用于最新消息展示</li><li><s><code>Tips 9</code></s><s>：</s>~~<code>redis</code>~~<s>应用于同类信息的关联搜索，二度关联搜索，深度关联搜索</s></li><li><code>Tips 12</code>：<code>redis</code>应用于基于黑名单与白名单设定的服务控制</li><li><code>Tips 13</code>：<code>redis</code>应用于计数器组合排序功能对应的排名</li><li><code>Tips 15</code>：<code>redis</code>应用于即时任务/消息队列执行管理</li><li><code>Tips 16</code>：<code>redis</code>应用于按次结算的服务控制</li></ul>',13),o=[t,r,c];function m(p,h){return n(),i("div",null,o)}const b=l(d,[["render",m],["__file","redis-persistence.html.vue"]]);export{b as default};
