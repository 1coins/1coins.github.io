const e=JSON.parse('{"key":"v-6c45c06f","path":"/article/rabbitmq/rabbitmq-introduction.html","title":"RabbitMQ 概述","lang":"zh-CN","frontmatter":{"date":"2023-10-11T00:00:00.000Z","article":true,"timeline":true,"index":true,"title":"RabbitMQ 概述","category":"RabbitMQ","tag":["RabbitMQ"],"description":"MQ 的相关概念 什么是 MQ MQ(message queue)，从字面意思上看，本质是个队列，FIFO先入先出，只不过队列中存放的内容是message而已，还是一种跨进程的通信机制，用于上下游传递消息。 在互联网架构中，MQ是一种非常常见的上下游“逻辑解耦+物理解耦”的消息通信服务。使用了MQ之后，消息发送上游只需要依赖MQ，不用依赖其他服务。 为什么要用 MQ","head":[["meta",{"property":"og:url","content":"https://1coins.github.io/article/rabbitmq/rabbitmq-introduction.html"}],["meta",{"property":"og:site_name","content":"乾元"}],["meta",{"property":"og:title","content":"RabbitMQ 概述"}],["meta",{"property":"og:description","content":"MQ 的相关概念 什么是 MQ MQ(message queue)，从字面意思上看，本质是个队列，FIFO先入先出，只不过队列中存放的内容是message而已，还是一种跨进程的通信机制，用于上下游传递消息。 在互联网架构中，MQ是一种非常常见的上下游“逻辑解耦+物理解耦”的消息通信服务。使用了MQ之后，消息发送上游只需要依赖MQ，不用依赖其他服务。 为什么要用 MQ"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-14T08:58:25.000Z"}],["meta",{"property":"article:author","content":"乾元"}],["meta",{"property":"article:tag","content":"RabbitMQ"}],["meta",{"property":"article:published_time","content":"2023-10-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-14T08:58:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RabbitMQ 概述\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-14T08:58:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乾元\\",\\"url\\":\\"https://github.com/1coins\\",\\"email\\":\\"lau5464@126.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是 MQ","slug":"什么是-mq","link":"#什么是-mq","children":[]},{"level":2,"title":"为什么要用 MQ","slug":"为什么要用-mq","link":"#为什么要用-mq","children":[{"level":3,"title":"流量消峰","slug":"流量消峰","link":"#流量消峰","children":[]},{"level":3,"title":"应用解耦","slug":"应用解耦","link":"#应用解耦","children":[]},{"level":3,"title":"异步处理","slug":"异步处理","link":"#异步处理","children":[]}]},{"level":2,"title":"MQ 的分类","slug":"mq-的分类","link":"#mq-的分类","children":[]},{"level":2,"title":"MQ 的选择","slug":"mq-的选择","link":"#mq-的选择","children":[]},{"level":2,"title":"RabbitMQ 的概念","slug":"rabbitmq-的概念","link":"#rabbitmq-的概念","children":[]},{"level":2,"title":"四大核心概念","slug":"四大核心概念","link":"#四大核心概念","children":[]},{"level":2,"title":"名词介绍","slug":"名词介绍","link":"#名词介绍","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"依赖","slug":"依赖","link":"#依赖","children":[]},{"level":2,"title":"消息生产者","slug":"消息生产者","link":"#消息生产者","children":[]},{"level":2,"title":"消息消费者","slug":"消息消费者","link":"#消息消费者","children":[]},{"level":2,"title":"轮训分发消息","slug":"轮训分发消息","link":"#轮训分发消息","children":[{"level":3,"title":"抽取工具类","slug":"抽取工具类","link":"#抽取工具类","children":[]},{"level":3,"title":"启动两个工作线程","slug":"启动两个工作线程","link":"#启动两个工作线程","children":[]},{"level":3,"title":"启动一个发送线程","slug":"启动一个发送线程","link":"#启动一个发送线程","children":[]},{"level":3,"title":"结果展示","slug":"结果展示","link":"#结果展示","children":[]}]},{"level":2,"title":"消息应答","slug":"消息应答","link":"#消息应答","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"自动应答","slug":"自动应答","link":"#自动应答","children":[]},{"level":3,"title":"消息应答的方法","slug":"消息应答的方法","link":"#消息应答的方法","children":[]},{"level":3,"title":"Multiple 的解释","slug":"multiple-的解释","link":"#multiple-的解释","children":[]},{"level":3,"title":"消息自动重新入队","slug":"消息自动重新入队","link":"#消息自动重新入队","children":[]},{"level":3,"title":"消息手动应答代码","slug":"消息手动应答代码","link":"#消息手动应答代码","children":[]},{"level":3,"title":"手动应答效果演示","slug":"手动应答效果演示","link":"#手动应答效果演示","children":[]}]},{"level":2,"title":"RabbitMQ 持久化","slug":"rabbitmq-持久化","link":"#rabbitmq-持久化","children":[{"level":3,"title":"概念","slug":"概念-1","link":"#概念-1","children":[]},{"level":3,"title":"队列如何实现持久化","slug":"队列如何实现持久化","link":"#队列如何实现持久化","children":[]},{"level":3,"title":"消息实现持久化","slug":"消息实现持久化","link":"#消息实现持久化","children":[]},{"level":3,"title":"不公平分发","slug":"不公平分发","link":"#不公平分发","children":[]},{"level":3,"title":"预取值","slug":"预取值","link":"#预取值","children":[]}]}],"git":{"createdTime":1697273905000,"updatedTime":1697273905000,"contributors":[{"name":"1coins","email":"lau5464@126.com","commits":1}]},"readingTime":{"minutes":24,"words":7200},"filePathRelative":"article/rabbitmq/rabbitmq-introduction.md","localizedDate":"2023年10月11日","excerpt":"<h1> MQ 的相关概念</h1>\\n<h2> 什么是 MQ</h2>\\n<p><code>MQ(message queue)</code>，从字面意思上看，本质是个队列，<code>FIFO</code>先入先出，只不过队列中存放的内容是<code>message</code>而已，还是一种跨进程的通信机制，用于上下游传递消息。</p>\\n<p>在互联网架构中，<code>MQ</code>是一种非常常见的上下游“逻辑解耦+物理解耦”的消息通信服务。使用了<code>MQ</code>之后，消息发送上游只需要依赖<code>MQ</code>，不用依赖其他服务。</p>\\n<h2> 为什么要用 MQ</h2>","autoDesc":true}');export{e as data};
