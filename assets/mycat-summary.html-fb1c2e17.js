import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,a as n,b as s,d as t,e as a}from"./app-3e6d2d9d.js";const i={},u=n("h1",{id:"mycat-概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mycat-概述","aria-hidden":"true"},"#"),s(" MyCat 概述")],-1),d=n("h2",{id:"mycat-是什么",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mycat-是什么","aria-hidden":"true"},"#"),s(" MyCat 是什么")],-1),r={href:"http://www.mycat.io/",target:"_blank",rel:"noopener noreferrer"},k=a('<p>MyCat 是数据库中间件。</p><h3 id="数据库中间件" tabindex="-1"><a class="header-anchor" href="#数据库中间件" aria-hidden="true">#</a> 数据库中间件</h3><p>中间件：是一类连接软件组件和应用的计算机软件，以便于软件各部件之间的沟通。例如<code>Tomcat</code>是<code>Web</code>中间件。<br> 数据库中间件：连接<code>Java</code>应用程序和数据库。</p><h3 id="为什么要用-mycat" tabindex="-1"><a class="header-anchor" href="#为什么要用-mycat" aria-hidden="true">#</a> 为什么要用 MyCat</h3><ol><li><code>Java</code>与数据库紧耦合</li><li>高访问量高并发对数据库的压力</li><li>读写请求数据不一致</li></ol><h3 id="数据库中间件对比" tabindex="-1"><a class="header-anchor" href="#数据库中间件对比" aria-hidden="true">#</a> 数据库中间件对比</h3>',6),m=n("ul",null,[n("li",null,[n("code",null,"Cobar"),s("属于阿里"),n("code",null,"B2B"),s("事业群，始于 2008 年，在阿里服役 3 年多，接管 3000+ 个"),n("code",null,"MySql"),s("数据库的"),n("code",null,"schema"),s("，集群日处理在线"),n("code",null,"SQL"),s("请求 50 亿次以上；由于"),n("code",null,"Cobar"),s("发起人的离职，"),n("code",null,"Cobar"),s("停止维护")]),n("li",null,[n("code",null,"MyCat"),s("是开源社区在阿里"),n("code",null,"Cobar"),s("基础上进行二次开发，解决了"),n("code",null,"Cobar"),s("存在的问题，并且加入了许多新的功能，青出于蓝而胜于蓝")]),n("li",null,[n("code",null,"OneProxy"),s("基于"),n("code",null,"MySql"),s("官方的"),n("code",null,"Proxy"),s("思想利用"),n("code",null,"C"),s("进行开发的，"),n("code",null,"OneProxy"),s("是一款商业收费的中间件，舍弃了一些功能，专注在性能和稳定性上")]),n("li",null,[n("code",null,"KingShard"),s("由小团队用"),n("code",null,"Go"),s("语言开发，还需要发展，需要不断完善")]),n("li",null,[n("code",null,"Vitess"),s("是"),n("code",null,"Youtube"),s("生产在使用，架构很复杂，不支持"),n("code",null,"MySQL"),s("原生协议，使用需要大量改造成本")]),n("li",null,[n("code",null,"Atlas"),s("是 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"360")]),n("annotation",{encoding:"application/x-tex"},"360")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"360")])])]),s(" 团队基于"),n("code",null,"MySql Proxy"),s("改写，功能还需完善，高并发下不稳定")]),n("li",null,[n("code",null,"MaxScale"),s("是"),n("code",null,"MariaDB"),s("（"),n("code",null,"MySq"),s("原作者维护的一个版本） 研发的中间件")]),n("li",null,[n("code",null,"MySqRoute"),s("是"),n("code",null,"MySql"),s("官方"),n("code",null,"Oracle"),s("公司发布的中间件")])],-1),v=a('<h2 id="mycat-能做什么" tabindex="-1"><a class="header-anchor" href="#mycat-能做什么" aria-hidden="true">#</a> MyCat 能做什么</h2><h3 id="读写分离" tabindex="-1"><a class="header-anchor" href="#读写分离" aria-hidden="true">#</a> 读写分离</h3><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/read-write-separation.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="数据分片" tabindex="-1"><a class="header-anchor" href="#数据分片" aria-hidden="true">#</a> 数据分片</h3><ul><li>垂直拆分（分库）</li><li>水平拆分（分表）</li><li>垂直+水平拆分（分库分表）</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/data-fragmentation.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="多数据源整合" tabindex="-1"><a class="header-anchor" href="#多数据源整合" aria-hidden="true">#</a> 多数据源整合</h3>',7),b={href:"https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/integration-of-multiple-data",target:"_blank",rel:"noopener noreferrer"},g=a(`<h1 id="mycat-原理" tabindex="-1"><a class="header-anchor" href="#mycat-原理" aria-hidden="true">#</a> MyCat 原理</h1><p><code>MyCAT</code>的原理中最重要的一个动词是“拦截”，它拦截了用户发送过来的<code>SQL</code>语句，首先对<code>SQL</code><br>语句做了一些特定的分析，如分片分析、路由分析、读写分离分析、缓存分析等，然后将此<code>SQL</code> 发<br>往后端的真实数据库，并将返回的结果做适当的处理，最终再返回给用户。</p><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/mycat-principle.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这种方式把数据库的分布式从代码中解耦出来，程序员察觉不出来后台使用<code>MyCat</code>还是<code>MySql</code>。</p><h1 id="mycat-安装启动" tabindex="-1"><a class="header-anchor" href="#mycat-安装启动" aria-hidden="true">#</a> MyCat 安装启动</h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><ol><li>解压后即可使用 <ul><li>解压缩文件拷贝到<code>linux</code>下的<code>/usr/local</code>文件夹中</li></ul></li><li>三个配置文件 <ul><li><code>schema.xml</code>：定义逻辑库，表、分片节点等内容</li><li><code>rule.xml</code>：定义分片规则</li><li><code>server.xml</code>：定义用户以及系统相关变量，如端口等</li></ul></li></ol><h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><ol><li><p>修改配置文件<code>server.xml</code><br> 修改用户信息，与<code>MySql</code>区分，如下：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mycat<span class="token punctuation">&quot;</span></span> <span class="token attr-name">defaultAccount</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>schemas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>TESTDB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultSchema<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>TESTDB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--No MyCat Database selected 错误前会尝试使用该schema作为schema，不设置则为null,报错 --&gt;</span>

     <span class="token comment">&lt;!-- 表级 DML 权限设置 --&gt;</span>
    <span class="token comment">&lt;!--
    &lt;privileges check=&quot;false&quot;&gt;
        &lt;schema name=&quot;TESTDB&quot; dml=&quot;0110&quot; &gt;
            &lt;table name=&quot;tb01&quot; dml=&quot;0000&quot;&gt;&lt;/table&gt;
            &lt;table name=&quot;tb02&quot; dml=&quot;1111&quot;&gt;&lt;/table&gt;
        &lt;/schema&gt;
    &lt;/privileges&gt;
    --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改配置文件<code>schema.xml</code><br> 删除标签间的表信息，<code>&lt;dataNode&gt;</code>标签只留一个，<code>&lt;dataHost&gt;</code>标签只留一个，<code>&lt;wirteHost&gt;&lt;readHost&gt;</code>只留一对</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mycat:schema</span> <span class="token name">SYSTEM</span> <span class="token string">&quot;schema.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mycat:</span>schema</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>mycat</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://io.mycat/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>schema</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TESTDB<span class="token punctuation">&quot;</span></span> <span class="token attr-name">checkSQLschema</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sqlMaxLimit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">randomDataNode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dn1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>schema</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataNode</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dn1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dataHost</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>host1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">database</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testdb<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataHost</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>host1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">maxCon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">minCon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">balance</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">writeType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dbType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mysql<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dbDriver</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>native<span class="token punctuation">&quot;</span></span> <span class="token attr-name">switchType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">slaveThreshold</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>heartbeat</span><span class="token punctuation">&gt;</span></span>select user()<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>heartbeat</span><span class="token punctuation">&gt;</span></span>
                <span class="token comment">&lt;!-- can have multi write hosts --&gt;</span>
                <span class="token comment">&lt;!-- 主数据库，用于写 --&gt;</span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>writeHost</span> <span class="token attr-name">host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hostM1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>192.168.30.134:3306<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token comment">&lt;!-- 从数据库，用于读 --&gt;</span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>readHost</span> <span class="token attr-name">host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hostS1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>192.168.30.130:3306<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>writeHost</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataHost</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mycat:</span>schema</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>验证数据库访问情况<br><code>MyCat</code>作为数据库中间件要和数据库部署在不同机器上，所以要验证远程访问情况。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># mysql -uroot -p123456 -h 192.168.30.134 -P 3306</span>
mysql<span class="token operator">&gt;</span>

<span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># mysql -uroot -p123456 -h 192.168.30.130 -P 3306</span>
mysql<span class="token operator">&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如无法访问，则关闭防火墙或开启 3306 端口</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 关闭防火墙</span>
<span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># systemctl stop firewalld.service;</span>

<span class="token comment"># 对外开放访问的端口</span>
<span class="token punctuation">[</span>root@localhost home<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --add-port=3306/tcp --permanent</span>
<span class="token comment"># 重启防火墙</span>
<span class="token punctuation">[</span>root@localhost home<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --reload</span>

<span class="token comment"># 查看已经开放的端口号</span>
<span class="token punctuation">[</span>root@localhost home<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --list-all</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动程序</p><ul><li>控制台启动 ：去<code>mycat/bin</code>目录下执行<code>./mycat console</code><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment">#  ./mycat console</span>
Running Mycat-server<span class="token punctuation">..</span>.
wrapper  <span class="token operator">|</span> --<span class="token operator">&gt;</span> Wrapper Started as Console
wrapper  <span class="token operator">|</span> Launching a JVM<span class="token punctuation">..</span>.
jvm <span class="token number">1</span>    <span class="token operator">|</span> Wrapper <span class="token punctuation">(</span>Version <span class="token number">3.2</span>.3<span class="token punctuation">)</span> http://wrapper.tanukisoftware.org
jvm <span class="token number">1</span>    <span class="token operator">|</span>   Copyright <span class="token number">1999</span>-2006 Tanuki Software, Inc.  All Rights Reserved.
jvm <span class="token number">1</span>    <span class="token operator">|</span>
jvm <span class="token number">1</span>    <span class="token operator">|</span> MyCAT Server startup successfully. see logs <span class="token keyword">in</span> logs/mycat.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>后台启动 ：去<code>mycat/bin</code>目录下<code>./mycat start</code></li></ul><p>为了能第一时间看到启动日志，方便定位问题，选择控制台启动。</p></li><li><p>启动时可能出现报错</p><ul><li>如果无法启动，可能没有安装<code>JDK</code>环境</li><li>如果操作系统是<code>CentOS6.8</code>，可能会出现域名解析失败错误，可以按照以下步骤解决 <ol><li>用<code>vi</code>修改<code>/etc/hosts</code>文件，在 <a href="127.0.0.1">127.0.0.1</a> 后面增加自己的机器名<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain centos02
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>修改后重新启动网络服务<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># service network restart</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li></ul></li></ol><h2 id="登录" tabindex="-1"><a class="header-anchor" href="#登录" aria-hidden="true">#</a> 登录</h2><ol><li>登录后台管理窗口<br> 此登录方式用于管理维护<code>MyCat</code><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@centos02 ~<span class="token punctuation">]</span><span class="token comment"># mysql -umycat -p123456 -P 9066 -h 192.168.30.134</span>
mysql: <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> Using a password on the <span class="token builtin class-name">command</span> line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with <span class="token punctuation">;</span> or <span class="token punctuation">\\</span>g.
Your MySQL connection <span class="token function">id</span> is <span class="token number">3</span>
Server version: <span class="token number">5.6</span>.29-mycat-1.6.7.6-release-20211111140317 MyCat Server <span class="token punctuation">(</span>monitor<span class="token punctuation">)</span>

Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token number">2000</span>, <span class="token number">2021</span>, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type <span class="token string">&#39;help;&#39;</span> or <span class="token string">&#39;\\h&#39;</span> <span class="token keyword">for</span> help. Type <span class="token string">&#39;\\c&#39;</span> to <span class="token function">clear</span> the current input statement.

mysql<span class="token operator">&gt;</span> show database<span class="token punctuation">;</span>
+----------+
<span class="token operator">|</span> DATABASE <span class="token operator">|</span>
+----------+
<span class="token operator">|</span> testdb   <span class="token operator">|</span>
+----------+
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> show @@help<span class="token punctuation">;</span>
+--------------------------------------------------------------+--------------------------------------------+
<span class="token operator">|</span> STATEMENT                                                    <span class="token operator">|</span> DESCRIPTION                                <span class="token operator">|</span>
+--------------------------------------------------------------+--------------------------------------------+
<span class="token operator">|</span> show @@time.current                                          <span class="token operator">|</span> Report current timestamp                   <span class="token operator">|</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token number">59</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>登录数据窗口<br> 此登录方式用于通过<code>MyCat</code>查询数据，选择这种方式访问<code>MyCat</code><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mysql -umycat -p123456 -P 8066 -h 192.168.30.134</span>
mysql<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h1 id="mycat-实例" tabindex="-1"><a class="header-anchor" href="#mycat-实例" aria-hidden="true">#</a> MyCat 实例</h1><h2 id="读写分离-1" tabindex="-1"><a class="header-anchor" href="#读写分离-1" aria-hidden="true">#</a> 读写分离</h2><p>通过<code>MyCaT</code>和<code>MySql</code>的主从复制配合搭建数据库的读写分离，实现<code>MySql</code>的高可用性。将搭建一主一从、双主双从两种读写分离模式。</p><h3 id="一主一从" tabindex="-1"><a class="header-anchor" href="#一主一从" aria-hidden="true">#</a> 一主一从</h3><p>一个主机用于处理所有写请求，一台从机负责所有读请求，架构图如下：</p><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/one-master-one-slave.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li><p>搭建<code>MySql</code>数据库主从复制</p><ol><li><p><code>MySql</code>主从复制原理<img src="https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/mysql-master-slave-principle.png" alt="" loading="lazy"></p></li><li><p>主机配置（<a href="192.168.30.134">192.168.30.134</a>）<br> 修改配置文件：<code>vim /etc/my.cnf</code>。</p><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code># 主服务器唯一ID
server-id=1
# 启用二进制日志
log-bin=mysql-bin
# 设置不要复制的数据库(可设置多个)
binlog-ignore-db=mysql
binlog-ignore-db=information_schema
# 设置需要复制的数据库，binlog-do-db=需要复制的主数据库名字
binlog-do-db=testdb
# 设置 logbin 格式
binlog_format=STATEMENT

datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock

log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>binlog</code>日志三种格式：</p><ul><li><code>Statement</code>：每一条会修改数据的<code>sql</code>都会记录在<code>binlog</code>中 <ul><li><p>优点：</p><ul><li>不需要记录每一行的变化，减少了<code>binlog</code>日志量，节约了<code>IO</code>，提高性能</li><li>相比<code>row</code>能节约多少性能与日志量，这个取决于应用的<code>SQL</code>情况，正常同一条记录修改或者插入<code>row</code>格式所产生的日志量还小于<code>Statement</code>产生的日志量，但是考虑到如果带条件的<code>update</code>操作，以及整表删除，<code>alter</code>表等操作，<code>ROW</code>格式会产生大量日志，因此在考虑是否使用<code>ROW</code>格式日志时应该跟据应用的实际情况，其所产生的日志量会增加多少，以及带来的<code>IO</code>性能问题</li></ul></li><li><p>缺点：</p><ul><li>由于记录的只是执行语句，为了这些语句能在<code>slave</code>上正确运行，因此还必须记录每条语句在执行的时候的一些相关信息，以保证所有语句能在<code>slave</code>得到和<code>master</code>端执行时候相同的结果</li><li>另外<code>MySsql</code>的复制，像一些特定函数功能，<code>slave</code>可与<code>master</code>上要保持一致会有很多相关问题（如<code>sleep()</code>函数，<code>last_insert_id()</code>，以及<code>user-defined functions(udf)</code>会出现问题）</li></ul></li></ul></li><li><code>Row</code>：不记录<code>sql</code>语句上下文相关信息，仅保存哪条记录被修改 <ul><li>优点：<code>binlog</code>中可以不记录执行的<code>sql</code>语句的上下文相关的信息，仅需要记录那一条记录被修改成什么了；所以<code>ROW-level</code>的日志内容会非常清楚的记录下每一行数据修改的细节，而且不会出现某些特定情况下的存储过程，或<code>function</code>，以及<code>trigger</code>的调用和触发无法被正确复制的问题。</li><li>缺点：所有的执行的语句当记录到日志中的时候，都将以每行记录的修改来记录，这样可能会产生大量的日志内容；比如一条<code>update</code>语句，修改多条记录，则<code>binlog</code>中每一条修改都会有记录，这样造成<code>binlog</code>日志量会很大，特别是当执行<code>alter table</code>之类的语句的时候，由于表结构修改，每条记录都发生改变，那么该表每一条记录都会记录到日志中。</li></ul></li><li><code>Mixedlevel</code>：是以上两种<code>level</code>的混合使用 <ul><li>一般的语句修改使用<code>Statment</code>格式保存<code>binlog</code>，如一些函数，<code>Statement</code>无法完成主从复制的操作，则采用<code>ROW</code>格式保存<code>binlog</code>；<code>MySql</code>会根据执行的每一条具体的<code>sql</code>语句来区分对待记录的日志形式，也就是在<code>Statement</code>和<code>Row</code>之间选择一种，新版本的<code>MySql</code>中对<code>ROW-level</code>模式也被做了优化，并不是所有的修改都会以<code>ROW-level</code>来记录，像遇到表结构变更的时候就会以<code>Statement</code>模式来记录；至于<code>update</code>或者<code>delete</code>等修改数据的语句，还是会记录所有行的变更。</li></ul></li></ul></li><li><p>从机配置（<a href="192.168.30.130">192.168.30.130</a>）<br> 修改配置文件：<code>vim /etc/my.cnf</code>。</p><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code># 从服务器唯一ID
server-id=2
# 启用中继日志
relay-log=mysql-relay

datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock

log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>主机、从机重启<code>MySQL</code>服务</p></li><li><p>主机从机都关闭防火墙</p></li><li><p>在主机上建立帐户并授权<code>slave</code></p><ul><li>在主机<code>MySql</code>里执行授权命令<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> global <span class="token assign-left variable">validate_password_policy</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> global <span class="token assign-left variable">validate_password_length</span><span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span>
Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> GRANT REPLICATION SLAVE ON *.* TO <span class="token string">&#39;slave&#39;</span>@<span class="token string">&#39;%&#39;</span> IDENTIFIED BY <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>
Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>查询<code>master</code>的状态<br> 记录下<code>File</code>和<code>Position</code>的值，执行完此步骤后不要再操作主服务器<code>MySql</code>，防止主服务器状态值变化。<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> show master status<span class="token punctuation">;</span>
+------------------+----------+--------------+--------------------------+-------------------+
<span class="token operator">|</span> File             <span class="token operator">|</span> Position <span class="token operator">|</span> Binlog_Do_DB <span class="token operator">|</span> Binlog_Ignore_DB         <span class="token operator">|</span> Executed_Gtid_Set <span class="token operator">|</span>
+------------------+----------+--------------+--------------------------+-------------------+
<span class="token operator">|</span> mysql-bin.000001 <span class="token operator">|</span>      <span class="token number">430</span> <span class="token operator">|</span> testdb       <span class="token operator">|</span> mysql,information_schema <span class="token operator">|</span>                   <span class="token operator">|</span>
+------------------+----------+--------------+--------------------------+-------------------+
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>在从机上配置需要复制的主机</p><ul><li><p>复制主机</p><ul><li>复制主机的命令<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>CHANGE MASTER TO <span class="token assign-left variable">MASTER_HOST</span><span class="token operator">=</span><span class="token string">&#39;主机的IP地址&#39;</span>,
<span class="token assign-left variable">MASTER_USER</span><span class="token operator">=</span><span class="token string">&#39;slave&#39;</span>,
<span class="token assign-left variable">MASTER_PASSWORD</span><span class="token operator">=</span><span class="token string">&#39;123456&#39;</span>,
<span class="token assign-left variable">MASTER_LOG_FILE</span><span class="token operator">=</span><span class="token string">&#39;mysql-bin.具体数字&#39;</span>,MASTER_LOG_POS<span class="token operator">=</span>具体值<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>输入<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>CHANGE MASTER TO <span class="token assign-left variable">MASTER_HOST</span><span class="token operator">=</span><span class="token string">&#39;192.168.30.134&#39;</span>,
<span class="token assign-left variable">MASTER_USER</span><span class="token operator">=</span><span class="token string">&#39;slave&#39;</span>,
<span class="token assign-left variable">MASTER_PASSWORD</span><span class="token operator">=</span><span class="token string">&#39;123456&#39;</span>,
<span class="token assign-left variable">MASTER_LOG_FILE</span><span class="token operator">=</span><span class="token string">&#39;mysql-bin.000001&#39;</span>,MASTER_LOG_POS<span class="token operator">=</span><span class="token number">430</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>启动从服务器复制功能</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> start slave<span class="token punctuation">;</span>
Query OK, <span class="token number">0</span> rows affected, <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看从服务器状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> show slave status<span class="token punctuation">\\</span>G
*************************** <span class="token number">1</span>. row ***************************
               Slave_IO_State: Waiting <span class="token keyword">for</span> <span class="token builtin class-name">source</span> to send event
                  Master_Host: <span class="token number">192.168</span>.30.134
                  Master_User: slave
                  Master_Port: <span class="token number">3306</span>
                Connect_Retry: <span class="token number">60</span>
              Master_Log_File: mysql-bin.000001
          Read_Master_Log_Pos: <span class="token number">974</span>
               Relay_Log_File: mysql-relay.000002
                Relay_Log_Pos: <span class="token number">324</span>
        Relay_Master_Log_File: mysql-bin.000001
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
<span class="token punctuation">..</span>.
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面两个参数都是Yes，则说明主从配置成功：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Slave_IO_Running: Yes
Slave_SQL_Running: Yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>主机新建库、新建表、<code>insert</code>记录，从机复制</p><ul><li>主机<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> show databases<span class="token punctuation">;</span>
+--------------------+
<span class="token operator">|</span> Database           <span class="token operator">|</span>
+--------------------+
<span class="token operator">|</span> information_schema <span class="token operator">|</span>
<span class="token operator">|</span> mysql              <span class="token operator">|</span>
<span class="token operator">|</span> performance_schema <span class="token operator">|</span>
<span class="token operator">|</span> sys                <span class="token operator">|</span>
+--------------------+
<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> create database testdb<span class="token punctuation">;</span>
Query OK, <span class="token number">1</span> row affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> use testdb<span class="token punctuation">;</span>
Database changed
mysql<span class="token operator">&gt;</span> show tables<span class="token punctuation">;</span>
Empty <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> create table mytbl<span class="token punctuation">(</span>id int, name varchar<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> insert into mytbl values<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">&#39;zhang3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Query OK, <span class="token number">1</span> row affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> * from mytbl<span class="token punctuation">;</span>
+------+--------+
<span class="token operator">|</span> <span class="token function">id</span>   <span class="token operator">|</span> name   <span class="token operator">|</span>
+------+--------+
<span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> zhang3 <span class="token operator">|</span>
+------+--------+
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>从机<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> show databases<span class="token punctuation">;</span>
+--------------------+
<span class="token operator">|</span> Database           <span class="token operator">|</span>
+--------------------+
<span class="token operator">|</span> information_schema <span class="token operator">|</span>
<span class="token operator">|</span> mysql              <span class="token operator">|</span>
<span class="token operator">|</span> performance_schema <span class="token operator">|</span>
<span class="token operator">|</span> sys                <span class="token operator">|</span>
+--------------------+
<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> show databases<span class="token punctuation">;</span>
+--------------------+
<span class="token operator">|</span> Database           <span class="token operator">|</span>
+--------------------+
<span class="token operator">|</span> information_schema <span class="token operator">|</span>
<span class="token operator">|</span> mysql              <span class="token operator">|</span>
<span class="token operator">|</span> performance_schema <span class="token operator">|</span>
<span class="token operator">|</span> sys                <span class="token operator">|</span>
<span class="token operator">|</span> testdb             <span class="token operator">|</span>
+--------------------+
<span class="token number">5</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> use testdb<span class="token punctuation">;</span>
mysql<span class="token operator">&gt;</span> show tables<span class="token punctuation">;</span>
+------------------+
<span class="token operator">|</span> Tables_in_testdb <span class="token operator">|</span>
+------------------+
<span class="token operator">|</span> mytbl            <span class="token operator">|</span>
+------------------+
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> * from mytbl<span class="token punctuation">;</span>
+------+--------+
<span class="token operator">|</span> <span class="token function">id</span>   <span class="token operator">|</span> name   <span class="token operator">|</span>
+------+--------+
<span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> zhang3 <span class="token operator">|</span>
+------+--------+
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>如何停止从服务复制功能</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> stop slave<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>如何重新配置主从</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> stop slave<span class="token punctuation">;</span> 
mysql<span class="token operator">&gt;</span> reset master<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>修改<code>MyCat</code>的配置文件<code>schema.xml</code><br> 修改的<code>balance</code>属性，通过此属性配置读写分离的类型。负载均衡类型，目前的取值有 4 种：</p><ol><li><code>balance=&quot;0&quot;</code>：不开启读写分离机制，所有读操作都发送到当前可用的<code>writeHost</code>上</li><li><code>balance=&quot;1&quot;</code>：全部的<code>readHost</code>与<code>stand by writeHost</code>参与<code>select</code>语句的负载均衡，简单的说，当双主双从模式（<code>M1-&gt;S1</code>，<code>M2-&gt;S2</code>，并且<code>M1</code>与<code>M2</code>互为主备），正常情况下，<code>M2</code>、<code>S1</code>、<code>S2</code>都参与<code>select</code>语句的负载均衡</li><li><code>balance=&quot;2&quot;</code>：所有读操作都随机的在<code>writeHost</code>、<code>readhost</code>上分发</li><li><code>balance=&quot;3&quot;</code>：所有读请求随机的分发到<code>readhost</code>执行，<code>writerHost</code>不负担读压力</li></ol><p>为了能看到读写分离的效果，把<code>balance</code>设置成 2，会在两个主机间切换查询：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataHost</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>host1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">maxCon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">minCon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">balance</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span>
                          <span class="token attr-name">writeType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dbType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mysql<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dbDriver</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">switchType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">slaveThreshold</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>heartbeat</span><span class="token punctuation">&gt;</span></span>select user()<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>heartbeat</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动<code>MyCat</code></p></li><li><p>验证读写分离</p><ul><li>在写主机数据库表<code>mytbl</code>中插入带系统变量数据，造成主从数据不一致<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 写主机中插入并查询</span>
mysql<span class="token operator">&gt;</span> INSERT INTO mytbl VALUES<span class="token punctuation">(</span><span class="token number">2</span>,@@hostname<span class="token punctuation">)</span><span class="token punctuation">;</span>
Query OK, <span class="token number">1</span> row affected, <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> * from mytbl<span class="token punctuation">;</span>
+------+----------+
<span class="token operator">|</span> <span class="token function">id</span>   <span class="token operator">|</span> name     <span class="token operator">|</span>
+------+----------+
<span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> zhang3   <span class="token operator">|</span>
<span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> centos02 <span class="token operator">|</span>
+------+----------+
<span class="token number">2</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span>
<span class="token comment"># 读主机从查询</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> * from mytbl<span class="token punctuation">;</span>
+------+----------+
<span class="token operator">|</span> <span class="token function">id</span>   <span class="token operator">|</span> name     <span class="token operator">|</span>
+------+----------+
<span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> zhang3   <span class="token operator">|</span>
<span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> centos03 <span class="token operator">|</span>
+------+----------+
<span class="token number">2</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>在<code>MyCat</code>里查询<code>mytbl</code>表，可以看到查询语句在主从两个主机间切换<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># -A 是不预读取数据库，查询比较快</span>
<span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># mysql -umycat -p123456 -P 8066 -h 192.168.30.134 -A</span>

mysql<span class="token operator">&gt;</span> show databases<span class="token punctuation">;</span>
+----------+
<span class="token operator">|</span> DATABASE <span class="token operator">|</span>
+----------+
<span class="token operator">|</span> TESTDB   <span class="token operator">|</span>
+----------+
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> use TESTDB<span class="token punctuation">;</span>
Database changed
mysql<span class="token operator">&gt;</span> show tables<span class="token punctuation">;</span>
+------------------+
<span class="token operator">|</span> Tables <span class="token keyword">in</span> TESTDB <span class="token operator">|</span>
+------------------+
<span class="token operator">|</span> mytbl            <span class="token operator">|</span>
+------------------+
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><h3 id="双主双从" tabindex="-1"><a class="header-anchor" href="#双主双从" aria-hidden="true">#</a> 双主双从</h3><p>一个主机<code>M1</code>用于处理所有写请求，它的从机<code>S1</code>和另一台主机<code>M2</code>还有它的从机<code>S2</code>负责所有读请<br> 求。当<code>M1</code>主机宕机后，<code>M2</code>主机负责写请求，<code>M1</code>、<code>M2</code>互为备机。</p><p>架构图如下：</p><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/two-master-two-slave.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>编号</th><th>角色</th><th>IP</th><th>机器名</th></tr></thead><tbody><tr><td>1</td><td>M1</td><td>192.168.30.134</td><td>centos02.02</td></tr><tr><td>2</td><td>S1</td><td>192.168.30.130</td><td>centos03.03</td></tr><tr><td>3</td><td>M2</td><td>192.168.30.129</td><td>centos01.01</td></tr><tr><td>4</td><td>S2</td><td>192.168.30.131</td><td>cdntos04.04</td></tr></tbody></table><ol><li><p>搭建<code>MySql</code>数据库主从复制（双主双从）</p><ol><li><p>双主机配置<br> 修改配置文件：<code>vim /etc/my.cnf</code>。</p><ul><li><code>M1</code><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code># 主服务器唯一 ID
server-id=1
# 启用二进制日志
log-bin=mysql-bin
# 设置不要复制的数据库（可设置多个）
binlog-ignore-db=mysql
binlog-ignore-db=information_schema
# 设置需要复制的数据库
binlog-do-db=需要复制的主数据库名字
# 设置 logbin 格式
binlog_format=STATEMENT
# 在作为从数据库的时候，有写入操作也要更新二进制日志文件
log-slave-updates 
# 表示自增长字段每次递增的量，指自增字段的起始值，其默认值是 1，取值范围是 1 .. 65535
auto-increment-increment=2 
# 表示自增长字段从哪个数开始，指字段一次递增多少，取值范围是 1 .. 65535
auto-increment-offset=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>M2</code><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code># 主服务器唯一 ID
server-id=3
# 启用二进制日志
log-bin=mysql-bin
# 设置不要复制的数据库（可设置多个）
binlog-ignore-db=mysql
binlog-ignore-db=information_schema
# 设置需要复制的数据库
binlog-do-db=需要复制的主数据库名字
# 设置 logbin 格式
binlog_format=STATEMENT
# 在作为从数据库的时候，有写入操作也要更新二进制日志文件
log-slave-updates 
# 表示自增长字段每次递增的量，指自增字段的起始值，其默认值是 1，取值范围是 1 .. 65535
auto-increment-increment=2 
# 表示自增长字段从哪个数开始，指字段一次递增多少，取值范围是 1 .. 65535
auto-increment-offset=2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>双主机配置<br> 修改配置文件：<code>vim /etc/my.cnf</code>。</p><ul><li><code>S1</code><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code># 从服务器唯一 ID
server-id=2
# 启用中继日志
relay-log=mysql-relay
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>S2</code><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code># 从服务器唯一 ID
server-id=4
# 启用中继日志
relay-log=mysql-relay
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>双主机、双从机重启<code>MySql</code>服务</p></li><li><p>主机从机都关闭防火墙</p></li><li><p>在两台主机上建立帐户并授权<code>slave</code></p><ul><li>在主机<code>MySql</code>里执行授权命令<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GRANT REPLICATION SLAVE ON *.* TO <span class="token string">&#39;slave&#39;</span>@<span class="token string">&#39;%&#39;</span> IDENTIFIED BY <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>查询<code>M1</code>的状态<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show master status<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>查询<code>M2</code>的状态<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show master status<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>分别记录下<code>File</code>和<code>Position</code>的值，执行完此步骤后不要再操作主服务器<code>MySql</code>，防止主服务器状态值变化</p></li><li><p>在从机上配置需要复制的主机<br><code>S1</code>复制<code>M1</code>，<code>S2</code>复制<code>M2</code>。</p><ul><li>复制主机的命令<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>CHANGE MASTER TO <span class="token assign-left variable">MASTER_HOST</span><span class="token operator">=</span><span class="token string">&#39;主机的IP地址&#39;</span>,
<span class="token assign-left variable">MASTER_USER</span><span class="token operator">=</span><span class="token string">&#39;slave&#39;</span>,
<span class="token assign-left variable">MASTER_PASSWORD</span><span class="token operator">=</span><span class="token string">&#39;123456&#39;</span>,
<span class="token assign-left variable">MASTER_LOG_FILE</span><span class="token operator">=</span><span class="token string">&#39;mysql-bin.具体数字&#39;</span>,MASTER_LOG_POS<span class="token operator">=</span>具体值<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>启动两台从服务器复制功能<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>start slave<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>查看从服务器状态<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show slave status<span class="token punctuation">\\</span>G<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>下面两个参数都是<code>Yes</code>，则说明主从配置成功！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Slave_IO_Running: Yes
Slave_SQL_Running: Yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>两个主机互相复制<br><code>M2</code>复制<code>M1</code>，<code>M1</code>复制<code>M2</code>，如上。</p></li><li><p><code>M1</code>主机新建库、新建表、<code>insert</code>记录，<code>M2</code>和<code>S1</code>、<code>S2</code>复制</p></li><li><p>停止从服务复制功能</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>stop slave<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重新配置主从</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>stop slave<span class="token punctuation">;</span> 
reset master<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>修改<code>Mycat</code>的配置文件<code>schema.xml</code><br> 修改的<code>balance</code>属性，通过此属性配置读写分离的类型，为了双主双从读写分离<code>balance</code>设置为 1。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataNode</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dn1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dataHost</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>host1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">database</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testdb<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataHost</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>host1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">maxCon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">minCon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">balance</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">writeType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dbType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mysql<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dbDriver</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>native<span class="token punctuation">&quot;</span></span> <span class="token attr-name">switchType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">slaveThreshold</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>heartbeat</span><span class="token punctuation">&gt;</span></span>select user()<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>heartbeat</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- can have multi write hosts --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>writeHost</span> <span class="token attr-name">host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hostM1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>192.168.140.124:3306<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- can have multi read hosts --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>readHost</span> <span class="token attr-name">host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hostS1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>192.168.140.130:3306<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>writeHost</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>writeHost</span> <span class="token attr-name">host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hostM2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>192.168.140.129:3306<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- can have multi read hosts --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>readHost</span> <span class="token attr-name">host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hostS2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>192.168.140.125:3306<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>writeHost</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataHost</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>writeType=&quot;0&quot;</code>：所有写操作发送到配置的第一个<code>writeHost</code>，第一个挂了切到还生存的第二个</li><li><code>writeType=&quot;1&quot;</code>，所有写操作都随机的发送到配置的<code>writeHost</code>，1.5 以后废弃不推荐</li><li><code>writeHost</code>，重新启动后以切换后的为准，切换记录在配置文件中：<code>dnindex.properties</code></li><li><code>switchType=&quot;1&quot;</code><ul><li>1 ：默认值，自动切换</li><li>-1 ：不自动切换</li><li>2 ：基于<code>MySql</code>主从同步的状态决定是否切换</li></ul></li></ul></li><li><p>启动<code>MyCat</code></p></li><li><p>验证读写分离</p><ul><li>在写主机<code>M1</code>数据库表<code>mytbl</code>中插入带系统变量数据，造成主从数据不一致<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> mytbl <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>@<span class="token variable">@hostname</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>在<code>MyCat</code>里查询<code>mytbl</code>表，可以看到查询语句在<code>M2(centos01)</code>、<code>S1(centos03)</code>、<code>S2(centos04)</code>主从三个主机间切换</li></ul></li><li><p>抗风险能力</p><ol><li>停止数据库<code>M1</code></li><li>在<code>MyCat</code>里插入数据依然成功，<code>M2</code>自动切换为写主机<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> mytbl <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>@<span class="token variable">@hostname</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>启动数据库<code>M1</code></li><li>在<code>MyCat</code>里查询<code>mytbl</code>表,可以看到查询语句在<code>M1(centos02)</code>、<code>S1(centos03)</code>、<code>S2(centos04)</code>主从三个主机间切换</li></ol><p><code>M1</code>、<code>M2</code>互做备机，负责写的主机宕机，备机切换负责写操作，保证数据库读写分离高可用性。</p></li></ol><h2 id="垂直拆分——分库" tabindex="-1"><a class="header-anchor" href="#垂直拆分——分库" aria-hidden="true">#</a> 垂直拆分——分库</h2><p>一个数据库由很多表的构成，每个表对应着不同的业务，垂直切分是指按照业务将表进行分类，<br>分布到不同 的数据库上面，这样也就将数据或者说压力分担到不同的库上面，如下图：</p><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/vertical-shard.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>系统被切分成了，用户，订单交易，支付几个模块。</p><h3 id="如何划分表" tabindex="-1"><a class="header-anchor" href="#如何划分表" aria-hidden="true">#</a> 如何划分表</h3><p>问题：在两台主机上的两个数据库中的表，能否关联查询？</p><p>答案：不可以关联查询。</p><p>分库的原则：有紧密关联关系的表应该在一个库里，相互没有关联关系的表可以分到不同的库里。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 客户表 rows：20 万</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> customer<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 订单表 rows：600 万</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    order_type <span class="token keyword">INT</span><span class="token punctuation">,</span>
    customer_id <span class="token keyword">INT</span><span class="token punctuation">,</span>
    amount <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 订单详细表 rows：600 万</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders_detail<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    detail <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    order_id <span class="token keyword">INT</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 订单状态字典表 rows：20</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dict_order_type<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    order_type <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上四个表如何分库？</p><p>客户表分在一个数据库，另外三张都需要关联查询，分在另外一个数据库。</p><h3 id="实现分库" tabindex="-1"><a class="header-anchor" href="#实现分库" aria-hidden="true">#</a> 实现分库</h3>`,36),h=n("ol",null,[n("li",null,[s("修改"),n("code",null,"schema.xml"),s("配置文件"),n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("schema")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("TESTDB"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"checkSQLschema"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("false"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"sqlMaxLimit"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("100"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"dataNode"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("dn1"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("table")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("customer"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"dataNode"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("dn2"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("table")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("schema")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dataNode")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("dn1"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"dataHost"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("host1"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"database"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("orders"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dataNode")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("dn2"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"dataHost"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("host2"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"database"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("orders"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dataHost")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("host1"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"maxCon"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("1000"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"minCon"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("10"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"balance"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("0"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"writeType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("0"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"dbType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("mysql"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"dbDriver"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("native"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"switchType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("1"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"slaveThreshold"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("100"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("heartbeat")]),n("span",{class:"token punctuation"},">")]),s("select user()"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("heartbeat")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- can have multi write hosts -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("writeHost")]),s(),n("span",{class:"token attr-name"},"host"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("hostM1"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"url"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("192.168.140.128:3306"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"user"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("root"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"password"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("123456"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("writeHost")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dataHost")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dataHost")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("host2"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"maxCon"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("1000"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"minCon"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("10"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"balance"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("0"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"writeType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("0"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"dbType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("mysql"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"dbDriver"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("native"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"switchType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("1"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"slaveThreshold"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("100"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("heartbeat")]),n("span",{class:"token punctuation"},">")]),s("select user()"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("heartbeat")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- can have multi write hosts -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("writeHost")]),s(),n("span",{class:"token attr-name"},"host"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("hostM2"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"url"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("192.168.140.127:3306"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"user"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("root"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"password"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("123456"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("writeHost")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dataHost")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])]),n("li",null,[s("新增两个空白库"),n("br"),s(" 分库操作不是在原来的老数据库上进行操作，需要准备两台机器分别安装新的数据库，在数据节点"),n("code",null,"dn1"),s("、"),n("code",null,"dn2"),s("上分别创建数据库"),n("code",null,"orders"),s("。"),n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token keyword"},"CREATE"),s(),n("span",{class:"token keyword"},"DATABASE"),s(" orders"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])])]),n("li",null,[s("启动"),n("code",null,"MyCat")]),n("li",null,[s("访问"),n("code",null,"MyCat"),s("进行分库 "),n("ol",null,[n("li",null,[s("访问"),n("code",null,"MyCat"),n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("mysql "),n("span",{class:"token parameter variable"},"-umycat"),s(),n("span",{class:"token parameter variable"},"-p123456"),s(),n("span",{class:"token parameter variable"},"-h"),s(),n("span",{class:"token number"},"192.168"),s(".140.134 "),n("span",{class:"token parameter variable"},"-P"),s(),n("span",{class:"token number"},"8066"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])])]),n("li",null,[s("切换到"),n("code",null,"TESTDB")]),n("li",null,[s("创建 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"4")]),n("annotation",{encoding:"application/x-tex"},"4")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"4")])])]),s(" 张表")]),n("li",null,[s("在"),n("code",null,"dn1"),s("和"),n("code",null,"dn2"),s("上查看表信息，可以看到成功分库")])])])],-1),y=n("h2",{id:"水平拆分——分表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#水平拆分——分表","aria-hidden":"true"},"#"),s(" 水平拆分——分表")],-1),q=n("p",null,"相对于垂直拆分，水平拆分不是将表做分类，而是按照某个字段的某种规则来分散到多个库之中，每个表中包含一部分数据。简单来说，可以将数据的水平切分理解为是按照数据行的切分，就是将表中的某些行切分到一个数据库，而另外的某些行又切分到其他的数据库中，如图：",-1),w={href:"https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/horizontal",target:"_blank",rel:"noopener noreferrer"},x=n("h3",{id:"实现分表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#实现分表","aria-hidden":"true"},"#"),s(" 实现分表")],-1),_=n("ol",null,[n("li",null,[s("选择要拆分的表"),n("br"),n("code",null,"MySql"),s("单表存储数据条数是有瓶颈的，单表达到 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1000")]),n("annotation",{encoding:"application/x-tex"},"1000")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1000")])])]),s(" 万条数据就达到了瓶颈，会影响查询效率，需要进行水平拆分（分表）进行优化。"),n("br"),n("code",null,"orders"),s("、"),n("code",null,"orders_detail"),s("都已经达到 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"600")]),n("annotation",{encoding:"application/x-tex"},"600")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"600")])])]),s(" 万行数据，需要进行分表优化。")]),n("li",null,[s("分表字段"),n("br"),s(" 以"),n("code",null,"orders"),s("表为例，可以根据不同自字段进行分表 "),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"编号"),n("th",null,"分表字段"),n("th",null,"效果")])]),n("tbody",null,[n("tr",null,[n("td",null,"1"),n("td",null,[n("code",null,"id"),s("（主键、或创建时间）")]),n("td",null,"查询订单注重时效，历史订单被查询的次数少，如此分片会造成一个节点访问多，一个访问少，不平均。")]),n("tr",null,[n("td",null,"2"),n("td",null,[n("code",null,"customer_id"),s("（客户"),n("code",null,"id"),s("）")]),n("td",null,[s("根据客户"),n("code",null,"id"),s("去分，两个节点访问平均，一个客户的所有订单都在同一个节点")])])])])]),n("li",null,[s("修改配置文件"),n("code",null,"schema.xml"),n("br"),s(" 为"),n("code",null,"orders"),s("表设置数据节点为"),n("code",null,"dn1"),s("、"),n("code",null,"dn2"),s("，并指定分片规则为"),n("code",null,"mod_rule"),s("（自定义的名字）"),n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("table")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("orders"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"dataNode"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("dn1,dn2"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"rule"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("mod_rule"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("table")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])])]),n("li",null,[s("修改配置文件"),n("code",null,"rule.xml"),n("br"),s(" 在"),n("code",null,"rule"),s("配置文件里新增分片规则"),n("code",null,"mod_rule"),s("，并指定规则适用字段为"),n("code",null,"customer_id"),s("，还有选择分片算法"),n("code",null,"mod-long"),s("（对字段求模运算），"),n("code",null,"customer_id"),s("对两个节点求模，根据结果分片，配置算法"),n("code",null,"mod-long"),s("参数"),n("code",null,"count"),s("为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"2")]),n("annotation",{encoding:"application/x-tex"},"2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"2")])])]),s("，分成两个节点。"),n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("tableRule")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("mod_rule"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("rule")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("columns")]),n("span",{class:"token punctuation"},">")]),s("customer_id"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("columns")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("algorithm")]),n("span",{class:"token punctuation"},">")]),s("mod-long"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("algorithm")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("rule")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("tableRule")]),n("span",{class:"token punctuation"},">")]),s(`
…
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("function")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("mod-long"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("io.mycat.route.function.PartitionByMod"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token comment"},"<!-- how many data nodes -->"),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("property")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("count"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("2"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("property")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("function")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])]),n("li",null,[s("在数据节点"),n("code",null,"dn2"),s("上建"),n("code",null,"orders"),s("表")]),n("li",null,[s("重启"),n("code",null,"MyCat"),s("，让配置生效")]),n("li",null,[s("访问"),n("code",null,"MyCat"),s("实现分片 "),n("ul",null,[n("li",null,[s("在"),n("code",null,"MyCat"),s("里向"),n("code",null,"orders"),s("表插入数据，"),n("code",null,"INSERT"),s("字段不能省略"),n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token keyword"},"INSERT"),s(),n("span",{class:"token keyword"},"INTO"),s(" orders"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},","),s("order_type"),n("span",{class:"token punctuation"},","),s("customer_id"),n("span",{class:"token punctuation"},","),s("amount"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"VALUES"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"101"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"100100"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"INSERT"),s(),n("span",{class:"token keyword"},"INTO"),s(" orders"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},","),s("order_type"),n("span",{class:"token punctuation"},","),s("customer_id"),n("span",{class:"token punctuation"},","),s("amount"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"VALUES"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"101"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"100300"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"INSERT"),s(),n("span",{class:"token keyword"},"INTO"),s(" orders"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},","),s("order_type"),n("span",{class:"token punctuation"},","),s("customer_id"),n("span",{class:"token punctuation"},","),s("amount"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"VALUES"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"101"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"101"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"120000"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"INSERT"),s(),n("span",{class:"token keyword"},"INTO"),s(" orders"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},","),s("order_type"),n("span",{class:"token punctuation"},","),s("customer_id"),n("span",{class:"token punctuation"},","),s("amount"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"VALUES"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"101"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"101"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"103000"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"INSERT"),s(),n("span",{class:"token keyword"},"INTO"),s(" orders"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},","),s("order_type"),n("span",{class:"token punctuation"},","),s("customer_id"),n("span",{class:"token punctuation"},","),s("amount"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"VALUES"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"102"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"101"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"100400"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"INSERT"),s(),n("span",{class:"token keyword"},"INTO"),s(" orders"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},","),s("order_type"),n("span",{class:"token punctuation"},","),s("customer_id"),n("span",{class:"token punctuation"},","),s("amount"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"VALUES"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"102"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"100020"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])]),n("li",null,[s("在"),n("code",null,"MyCat"),s("、"),n("code",null,"dn1"),s("、"),n("code",null,"dn2"),s("中查看"),n("code",null,"orders"),s("表数据，分表成功")])])])],-1),f=a('<h3 id="mycat-分片后的-join-查询" tabindex="-1"><a class="header-anchor" href="#mycat-分片后的-join-查询" aria-hidden="true">#</a> Mycat 分片后的 join 查询</h3><p><code>orders</code>订单表已经进行分表操作了，和它关联的<code>orders_detail</code>订单详情表如何进行<code>join</code>查询。</p><p>对<code>orders_detail</code>也要进行分片操作。</p><p><code>Join</code>的原理如下图：</p>',4),T={href:"https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/mycat-join-horizontal",target:"_blank",rel:"noopener noreferrer"},E=a(`<ol><li><p><code>ER</code>表<br><code>MyCat</code>借鉴了<code>NewSql</code>领域的新秀<code>Foundation DB</code>的设计思路，<code>Foundation DB</code>创新性的提<br>出了<code>Table Group</code>的概念，其将子表的存储位置依赖于主表，并且物理上紧邻存放，因此彻底解决了<code>Join</code>的效率和性能问题；根据这一思路，提出了基于<code>E-R</code>关系的数据分片策略，子表的记录与所关联的父表记录存放在同一个数据分片上。</p><ol><li>修改<code>schema.xml</code>配置文件<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orders<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dn1,dn2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mod_rule<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>childTable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orders_detail<span class="token punctuation">&quot;</span></span> <span class="token attr-name">primaryKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">joinKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>order_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parentKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>在<code>dn2</code>创建<code>orders_detail</code>表</li><li>重启<code>MyCat</code></li><li>访问<code>MyCat</code>向<code>orders_detail</code>表插入数据<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders_detail<span class="token punctuation">(</span>id<span class="token punctuation">,</span>detail<span class="token punctuation">,</span>order_id<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;detail1&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders_detail<span class="token punctuation">(</span>id<span class="token punctuation">,</span>detail<span class="token punctuation">,</span>order_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;detail1&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders_detail<span class="token punctuation">(</span>id<span class="token punctuation">,</span>detail<span class="token punctuation">,</span>order_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;detail1&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders_detail<span class="token punctuation">(</span>id<span class="token punctuation">,</span>detail<span class="token punctuation">,</span>order_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;detail1&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders_detail<span class="token punctuation">(</span>id<span class="token punctuation">,</span>detail<span class="token punctuation">,</span>order_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;detail1&#39;</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders_detail<span class="token punctuation">(</span>id<span class="token punctuation">,</span>detail<span class="token punctuation">,</span>order_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;detail1&#39;</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>在<code>MyCat</code>、<code>dn1</code>、<code>dn2</code>中运行两个表<code>join</code>语句<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Select</span> o<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>od<span class="token punctuation">.</span>detail <span class="token keyword">from</span> orders o <span class="token keyword">inner</span> <span class="token keyword">join</span> orders_detail od <span class="token keyword">on</span> o<span class="token punctuation">.</span>id<span class="token operator">=</span>od<span class="token punctuation">.</span>order_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li><li><p>全局表<br> 在分片的情况下，当业务表因为规模而进行分片以后，业务表与这些附属的字典表之间的关联，<br> 就成了比较 棘手的问题，考虑到字典表具有以下几个特性：</p><ul><li>变动不频繁</li><li>数据量总体变化不大</li><li>数据规模不大，很少有超过数十万条记录</li></ul><p>鉴于此，<code>MyCat</code>定义了一种特殊的表，称之为“全局表”，全局表具有以下特性：</p><ul><li>全局表的插入、更新操作会实时在所有节点上执行，保持各个分片的数据一致性</li><li>全局表的查询操作，只从一个节点获取</li><li>全局表可以跟任何一个表进行<code>Join</code>操作</li></ul><p>将字典表或者符合字典表特性的一些表定义为全局表，则从另外一个方面，很好的解决了数据<code>Join</code>的难题。通过全局表+基于<code>E-R</code>关系的分片策略，<code>MyCat</code>可以满足 80 % 以上的企业应用开发。</p><ol><li>修改<code>schema.xml</code>配置文件<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orders<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dn1,dn2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mod_rule<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>childTable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orders_detail<span class="token punctuation">&quot;</span></span> <span class="token attr-name">primaryKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">joinKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>order_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parentKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dict_order_type<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dn1,dn2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>global<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>在<code>dn2</code>创建<code>dict_order_type</code>表</li><li>重启<code>MyCat</code></li><li>访问<code>MyCat</code>向<code>dict_order_type</code>表插入数据<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> dict_order_type<span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_type<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token string">&#39;type1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> dict_order_type<span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_type<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token string">&#39;type2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>在<code>MyCat</code>、<code>dn1</code>、<code>dn2</code>中查询表数据<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dict_order_type<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li></ol><h3 id="常用分片规则" tabindex="-1"><a class="header-anchor" href="#常用分片规则" aria-hidden="true">#</a> 常用分片规则</h3><ol><li>取模<br> 此规则为对分片字段求摸运算。也是水平分表最常用规则。在<strong>实现分表</strong>中，<code>orders</code>表采用了此规则。</li><li>分片枚举<br> 通过在配置文件中配置可能的枚举<code>id</code>，自己配置分片，本规则适用于特定的场景，比如有些业务需要按照省份或区县来做保存，而全国省份区县固定的，这类业务使用本条规则。 <ol><li><p>修改<code>schema.xml</code>配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orders_ware_info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dn1,dn2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sharding_by_intfile<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改<code>rule.xml</code>配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tableRule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sharding_by_intfile<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>columns</span><span class="token punctuation">&gt;</span></span>areacode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>columns</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>algorithm</span><span class="token punctuation">&gt;</span></span>hash-int<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>algorithm</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tableRule</span><span class="token punctuation">&gt;</span></span>
......
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>function</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hash-int<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>io.mycat.route.function.PartitionByFileMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mapFile<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>partition-hash-int.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultNode<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>function</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>columns</code>：分片字段</li><li><code>algorithm</code>：分片函数</li><li><code>mapFile</code>：标识配置文件名称</li><li><code>type</code>：0 为<code>int</code>型、非 0 为<code>String</code></li><li><code>defaultNode</code>：默认节点，小于 0 表示不设置默认节点，大于等于 0 表示设置默认节点，设置默认节点如果碰到不识别的枚举值，就让它路由到默认节点，如不设置不识别就报错</li></ul></li><li><p>修改<code>partition-hash-int.txt</code>配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>110=0
120=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重启<code>MyCat</code></p></li><li><p>访问<code>MyCat</code>创建表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 订单归属区域信息表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders_ware_info<span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">comment</span> <span class="token string">&#39;编号&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>order_id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">comment</span> <span class="token string">&#39;订单编号&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>address<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;地址&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>areacode<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;区域编号&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>插入数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders_ware_info<span class="token punctuation">(</span>id<span class="token punctuation">,</span> order_id<span class="token punctuation">,</span>address<span class="token punctuation">,</span>areacode<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;北京&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;110&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders_ware_info<span class="token punctuation">(</span>id<span class="token punctuation">,</span> order_id<span class="token punctuation">,</span>address<span class="token punctuation">,</span>areacode<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;天津&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;120&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询<code>MyCat</code>、<code>dn1</code>、<code>dn2</code>可以看到数据分片效果</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> orders_ware_info<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li><li>范围约定<br> 此分片适用于，提前规划好分片字段某个范围属于哪个分片。 <ol><li><p>修改<code>schema.xml</code>配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>payment_info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dn1,dn2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>auto_sharding_long<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改<code>rule.xml</code>配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tableRule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>auto_sharding_long<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>columns</span><span class="token punctuation">&gt;</span></span>order_id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>columns</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>algorithm</span><span class="token punctuation">&gt;</span></span>rang-long<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>algorithm</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tableRule</span><span class="token punctuation">&gt;</span></span>
......
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>function</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rang-long<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>io.mycat.route.function.AutoPartitionByLong<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mapFile<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>autopartition-long.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultNode<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>function</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>columns</code>：分片字段</li><li><code>algorithm</code>：分片函数</li><li><code>mapFile</code>：标识配置文件名称</li><li><code>defaultNode</code>：默认节点，小于 0 表示不设置默认节点，大于等于 0 表示设置默认节点，设置默认节点如果碰到不识别的枚举值，就让它路由到默认节点，如不设置不识别就报错</li></ul></li><li><p>修改<code>autopartition-long.txt</code>配置文件</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>0-102=0
103-200=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重启<code>MyCat</code></p></li><li><p>访问<code>MyCat</code>创建表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 支付信息表 </span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> payment_info<span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">comment</span> <span class="token string">&#39;编号&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>order_id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">comment</span> <span class="token string">&#39;订单编号&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>payment_status<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">comment</span> <span class="token string">&#39;支付状态&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>插入数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> payment_info <span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_id<span class="token punctuation">,</span>payment_status<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> payment_info <span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_id<span class="token punctuation">,</span>payment_status<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> payment_info <span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_id <span class="token punctuation">,</span>payment_status<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> payment_info <span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_id<span class="token punctuation">,</span>payment_status<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询<code>MyCat</code>、<code>dn1</code>、<code>dn2</code>可以看到数据分片效果</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> payment_info<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li><li>按日期（天）分片<br> 此规则为按天分片。设定时间格式、范围 <ol><li><p>修改<code>schema.xml</code>配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login_info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dn1,dn2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sharding_by_date<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改<code>rule.xml</code>配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tableRule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sharding_by_date<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>columns</span><span class="token punctuation">&gt;</span></span>login_date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>columns</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>algorithm</span><span class="token punctuation">&gt;</span></span>shardingByDate<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>algorithm</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tableRule</span><span class="token punctuation">&gt;</span></span>
......
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>function</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shardingByDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>io.mycat.route.function.PartitionByDate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dateFormat<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>yyyy-MM-dd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sBeginDate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2019-01-01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sEndDate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2019-01-04<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sPartionDay<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>function</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>columns</code>：分片字段</li><li><code>algorithm</code>：分片函数</li><li><code>dateFormat</code>：日期格式</li><li><code>sBeginDate</code>：开始日期</li><li><code>sEndDate</code>：结束日期,则代表数据达到了这个日期的分片后循环从开始分片</li><li><code>sPartionDay</code>：分区天数，即默认从开始日期算起，分隔 2 天一个分区</li></ul></li><li><p>重启<code>MyCat</code></p></li><li><p>访问<code>MyCat</code>创建表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 用户信息表 </span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> login_info<span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">comment</span> <span class="token string">&#39;编号&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>user_id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">comment</span> <span class="token string">&#39;用户编号&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>login_date<span class="token punctuation">\`</span></span> <span class="token keyword">date</span> <span class="token keyword">comment</span> <span class="token string">&#39;登录日期&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>插入数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> login_info<span class="token punctuation">(</span>id<span class="token punctuation">,</span>user_id<span class="token punctuation">,</span>login_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token string">&#39;2019-01-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> login_info<span class="token punctuation">(</span>id<span class="token punctuation">,</span>user_id<span class="token punctuation">,</span>login_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token string">&#39;2019-01-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> login_info<span class="token punctuation">(</span>id<span class="token punctuation">,</span>user_id<span class="token punctuation">,</span>login_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token string">&#39;2019-01-03&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> login_info<span class="token punctuation">(</span>id<span class="token punctuation">,</span>user_id<span class="token punctuation">,</span>login_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token string">&#39;2019-01-04&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> login_info<span class="token punctuation">(</span>id<span class="token punctuation">,</span>user_id<span class="token punctuation">,</span>login_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token string">&#39;2019-01-05&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> login_info<span class="token punctuation">(</span>id<span class="token punctuation">,</span>user_id<span class="token punctuation">,</span>login_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token string">&#39;2019-01-06&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询<code>MyCat</code>、<code>dn1</code>、<code>dn2</code>可以看到数据分片效果</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> login_info<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li></ol><h3 id="全局序列" tabindex="-1"><a class="header-anchor" href="#全局序列" aria-hidden="true">#</a> 全局序列</h3><p>在实现分库分表的情况下，数据库自增主键已无法保证自增主键的全局唯一；为此，<code>MyCat</code>提供了全局<code>sequence</code>，并且提供了包含本地配置和数据库配置等多种实现方式。</p><ol><li><p>本地文件<br> 此方式<code>MyCat</code>将<code>sequence</code>配置到文件中，当使用到<code>sequence</code>中的配置后，<code>MyCat</code>会更下<code>classpath</code>中的<code>sequence_conf.properties</code>文件中<code>sequence</code>当前的值。</p><ul><li>优点：本地加载，读取速度较快C</li><li>缺点：抗风险能力差，<code>MyCat</code>所在主机宕机后，无法读取本地文件</li></ul></li><li><p>数据库方式<br> 利用数据库一个表 来进行计数累加。但是并不是每次生成序列都读写数据库，这样效率太低。</p><p><code>MyCat</code>会预加载一部分号段到<code>MyCat</code>的内存中，这样大部分读写序列都是在内存中完成的，如果内存中的号段用完了<code>MyCat</code>会再向数据库要一次。<br> 问：如果<code>MyCat</code>崩溃了，那内存中的序列岂不是都没了？<br>答：是的。如果是这样，那么<code>MyCat</code>启动后会向数据库申请新的号段，原有号段会弃用；也就是说如果<code>MyCat</code>重启，那么损失是当前的号段没用完的号码，但是不会因此出现主键重复。</p><ol><li><p>建库序列脚本</p><ol><li><p>在<code>dn1</code>上创建全局序列表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> MYCAT_SEQUENCE <span class="token punctuation">(</span>NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>current_value <span class="token keyword">INT</span> <span class="token operator">NOT</span>
<span class="token boolean">NULL</span><span class="token punctuation">,</span>increment <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建全局序列所需函数</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELIMITER</span> $$ 
<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> mycat_seq_currval<span class="token punctuation">(</span>seq_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>
<span class="token keyword">DETERMINISTIC</span> 
<span class="token keyword">BEGIN</span>
<span class="token keyword">DECLARE</span> retval <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> retval<span class="token operator">=</span><span class="token string">&quot;-999999999,null&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>CAST<span class="token punctuation">(</span>current_value <span class="token keyword">AS</span> <span class="token keyword">CHAR</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span>CAST<span class="token punctuation">(</span>increment <span class="token keyword">AS</span> <span class="token keyword">CHAR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> retval <span class="token keyword">FROM</span> MYCAT_SEQUENCE <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> seq_name<span class="token punctuation">;</span>
<span class="token keyword">RETURN</span> retval<span class="token punctuation">;</span>
<span class="token keyword">END</span> $$
<span class="token keyword">DELIMITER</span><span class="token punctuation">;</span>
<span class="token keyword">DELIMITER</span> $$
<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> mycat_seq_setval<span class="token punctuation">(</span>seq_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">VALUE</span> <span class="token keyword">INTEGER</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> 
<span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>
<span class="token keyword">DETERMINISTIC</span>
<span class="token keyword">BEGIN</span>
<span class="token keyword">UPDATE</span> MYCAT_SEQUENCE
<span class="token keyword">SET</span> current_value <span class="token operator">=</span> <span class="token keyword">VALUE</span>
<span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> seq_name<span class="token punctuation">;</span>
<span class="token keyword">RETURN</span> mycat_seq_currval<span class="token punctuation">(</span>seq_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">END</span> $$
<span class="token keyword">DELIMITER</span><span class="token punctuation">;</span>
<span class="token keyword">DELIMITER</span> $$
<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> mycat_seq_nextval<span class="token punctuation">(</span>seq_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> 
<span class="token keyword">DETERMINISTIC</span>
<span class="token keyword">BEGIN</span>
<span class="token keyword">UPDATE</span> MYCAT_SEQUENCE
<span class="token keyword">SET</span> current_value <span class="token operator">=</span> current_value <span class="token operator">+</span> increment <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> seq_name<span class="token punctuation">;</span>
<span class="token keyword">RETURN</span> mycat_seq_currval<span class="token punctuation">(</span>seq_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">END</span> $$
<span class="token keyword">DELIMITER</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>初始化序列表记录</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> MYCAT_SEQUENCE<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>current_value<span class="token punctuation">,</span>increment<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;ORDERS&#39;</span><span class="token punctuation">,</span> <span class="token number">400000</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li><li><p>修改<code>MyCat</code>配置</p><ol><li><p>修改<code>sequence_db_conf.properties</code><br> 意思是<code>orders</code>这个序列在<code>dn1</code>这个节点上，具体<code>dn1</code>节点是哪台机子，请参考<code>schema.xml</code></p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># sequence_db_conf.properties</span>
<span class="token key attr-name">GLOBAL</span><span class="token punctuation">=</span><span class="token value attr-value">dn1</span>
<span class="token key attr-name">COMPANY</span><span class="token punctuation">=</span><span class="token value attr-value">dn1</span>
<span class="token key attr-name">CUSTOMER</span><span class="token punctuation">=</span><span class="token value attr-value">dn1</span>
<span class="token key attr-name">ORDERS</span><span class="token punctuation">=</span><span class="token value attr-value">dn1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改<code>server.xml</code><br> 全局序列类型：</p><ul><li>0：本地文件</li><li>1：数据库方式</li><li>2：时间戳方式</li></ul><p>此处应该修改成 1。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sequnceHandlerType<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--&lt;property name=&quot;useCompression&quot;&gt;1&lt;/property&gt;--&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重启<code>MyCat</code></p></li></ol></li><li><p>验证全局序列</p><ol><li><p>登录<code>MyCat</code>，插入数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> orders<span class="token punctuation">(</span>id<span class="token punctuation">,</span>amount<span class="token punctuation">,</span>customer_id<span class="token punctuation">,</span>order_type<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token keyword">next</span> <span class="token keyword">value</span> <span class="token keyword">for</span> MYCATSEQ_ORDERS<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> orders<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重启<code>MyCat</code>后，再次插入数据，再查询</p></li></ol></li></ol></li><li><p>时间戳方式<br> 全局序列<code>ID= 64</code>位二进制<br> 42（毫秒）+ 5（机器 ID）+ 5（业务编码）+ 12（重复累加）换算成十进制为 18 位数的<code>long</code>类型，每毫秒可以并发 12 位二进制的累加。</p><ul><li>优点：配置简单</li><li>缺点：18 位<code>ID</code>过长</li></ul></li><li><p>自主生成全局序列<br> 可在<code>Java</code>项目里自己生成全局序列，如下：</p><ol><li>根据业务逻辑组合</li><li>可以利用<code>Redis</code>的单线程原子性<code>incr</code>来生成序列，但，自主生成需要单独在工程中用<code>Java</code> 代码实现，还是推荐使用<code>MyCat</code>自带全局序列</li></ol></li></ol><h2 id="基于-ha-机制的-mycat-高可用" tabindex="-1"><a class="header-anchor" href="#基于-ha-机制的-mycat-高可用" aria-hidden="true">#</a> 基于 HA 机制的 MyCat 高可用</h2><p>在实际项目中，<code>MyCat</code>服务也需要考虑高可用性，如果<code>MyCat</code>所在服务器出现宕机，或<code>MyCat</code>服<br>务故障，需要有备机提供服务，需要考虑<code>MyCat</code>集群。</p><h3 id="高可用方案" tabindex="-1"><a class="header-anchor" href="#高可用方案" aria-hidden="true">#</a> 高可用方案</h3><p>可以使用<code>HAProxy + Keepalived</code>配合两台<code>MyCat</code>搭起<code>MyCat</code>集群，实现高可用性。<code>HAProxy</code>实现了<code>MyCat</code>多节点的集群高可用和负载均衡，而<code>HAProxy</code>自身的高可用则可以通过<code>Keepalived</code>来实现。</p><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/mycat-haproxy-keepalived.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>编号</th><th>角色</th><th><code>IP</code>地址</th><th>机器名</th></tr></thead><tbody><tr><td>1</td><td>Mycat1</td><td>192.168.140.128</td><td>host79</td></tr><tr><td>2</td><td>Mycat2<br></td><td>192.168.140.127</td><td>host80</td></tr><tr><td>3</td><td>HAProxy（master）</td><td>192.168.140.126</td><td>host81</td></tr><tr><td>4</td><td>Keepalived（master）</td><td>192.168.140.126</td><td>host81</td></tr><tr><td>5</td><td>HAProxy（backup）</td><td>192.168.140.125</td><td>host82</td></tr><tr><td>6</td><td>Keepalived（backup）</td><td>192.168.140.125</td><td>host82</td></tr></tbody></table><h3 id="安装配置-haproxy" tabindex="-1"><a class="header-anchor" href="#安装配置-haproxy" aria-hidden="true">#</a> 安装配置 HAProxy</h3><ol><li>安装<code>HAProxy</code><ol><li><p>准备好<code>HAProxy</code>安装包，传到<code>/opt</code>目录下</p></li><li><p>解压到<code>/usr/local/src</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> haproxy-1.5.18.tar.gz <span class="token parameter variable">-C</span> /usr/local/src
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>进入解压后的目录，查看内核版本，进行编译</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/src/haproxy-1.5.18
<span class="token function">uname</span> <span class="token parameter variable">-r</span>
<span class="token function">make</span> <span class="token assign-left variable">TARGET</span><span class="token operator">=</span>linux310 <span class="token assign-left variable">PREFIX</span><span class="token operator">=</span>/usr/local/haproxy <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>x86_64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>ARGET=linux310</code>：内核版本，使用<code>uname -r</code>查看内核，如：<code>3.10.0-514.el7</code>，此时该参数就为<code>linux310</code></li><li><code>ARCH=x86_64</code>：系统位数</li><li><code>PREFIX=/usr/local/haprpxy</code>：<code>/usr/local/haprpxy</code>，为<code>HAPrpxy</code>安装路径</li></ul></li><li><p>编译完成后，进行安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token function">install</span> <span class="token assign-left variable">PREFIX</span><span class="token operator">=</span>/usr/local/haproxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>安装完成后，创建目录、创建<code>HAProxy</code>配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/data/haproxy/
<span class="token function">vim</span> /usr/local/haproxy/haproxy.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>向配置文件中插入以下配置信息,并保存</p><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>global
    log 127.0.0.1 local0
    #log 127.0.0.1 local1 notice
    #log loghost local0 info
    maxconn 4096
    chroot /usr/local/haproxy
    pidfile /usr/data/haproxy/haproxy.pid
    uid 99
    gid 99
    daemon
    #debug
    #quiet
defaults
    log global
    mode tcp
    option abortonclose
    option redispatch
    retries 3
    maxconn 2000
    timeout connect 5000
    timeout client 50000
    timeout server 50000
listen proxy_status 
    bind :48066
        mode tcp
        balance roundrobin
        server mycat_1 192.168.140.128:8066 check inter 10s
        server mycat_2 192.168.140.127:8066 check inter 10s
frontend admin_stats 
    bind :7777
        mode http
        stats enable
        option httplog
        maxconn 10
        stats refresh 30s
        stats uri /admin
        stats auth admin:123123
        stats hide-version
        stats admin if TRUE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li>启动验证 <ol><li>启动<code>HAProxy</code><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/haproxy/sbin/haproxy <span class="token parameter variable">-f</span> /usr/local/haproxy/haproxy.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>查看<code>HAProxy</code>进程<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> haproxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>打开浏览器访问<code>http://192.168.140.125:7777/admin</code><ul><li>在弹出框输入用户名：<code>admin</code>密码：<code>123456</code></li><li>如果<code>MyCat</code>主备机均已启动，则可以看到如下图（<code>MyCat1</code>和<code>MyCat2</code>全绿）</li></ul></li><li>验证负载均衡，通过<code>HAProxy</code>访问<code>MyCat</code><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-umycat</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.140.126 <span class="token parameter variable">-P</span> <span class="token number">48066</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li></ol><h3 id="配置-keepalived" tabindex="-1"><a class="header-anchor" href="#配置-keepalived" aria-hidden="true">#</a> 配置 Keepalived</h3><ol><li>安装<code>Keepalived</code><ol><li><p>准备好<code>Keepalived</code>安装包，传到<code>/opt</code>目录下</p></li><li><p>解压到<code>/usr/local/src</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> keepalived-1.4.2.tar.gz <span class="token parameter variable">-C</span> /usr/local/src
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>安装依赖插件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc openssl-devel popt-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>进入解压后的目录，进行配置，进行编译</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/src/keepalived-1.4.2
./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/keepalived
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>进行编译，完成后进行安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>运行前配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> /usr/local/src/keepalived-1.4.2/keepalived/etc/init.d/keepalived /etc/init.d/
<span class="token function">mkdir</span> /etc/keepalived
<span class="token function">cp</span> /usr/local/keepalived/etc/keepalived/keepalived.conf /etc/keepalived/
<span class="token function">cp</span> /usr/local/src/keepalived-1.4.2/keepalived/etc/sysconfig/keepalived /etc/sysconfig/
<span class="token function">cp</span> /usr/local/keepalived/sbin/keepalived /usr/sbin/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/keepalived/keepalived.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code># 修改内容如下
! Configuration File for keepalived
global_defs {
    notification_email {
        xlcocoon@foxmail.com
    }
    notification_email_from keepalived@showjoy.com
    smtp_server 127.0.0.1
    smtp_connect_timeout 30
    router_id LVS_DEVEL
    vrrp_skip_check_adv_addr
    vrrp_garp_interval 0
    vrrp_gna_interval 0
}
vrrp_instance VI_1 {
    # 主机配 MASTER，备机配 BACKUP
    state MASTER
    # 所在机器网卡
    interface ens33
    virtual_router_id 51
    # 数值越大优先级越高
    priority 100
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {
        # 虚拟 IP
        192.168.140.200
    }
}
virtual_server 192.168.140.200 48066 {
    delay_loop 6
    lb_algo rr
    lb_kind NAT
    persistence_timeout 50
    protocol TCP
    real_server 192.168.140.125 48066 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            retry 3
            delay_before_retry 3
        }
    }
    real_server 192.168.140.126 48600 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li>启动验证 <ol><li>启动<code>Keepalived</code><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">service</span> keepalived start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>登录验证<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-umycat</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.140.200 <span class="token parameter variable">-P</span> <span class="token number">48066</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li></ol><h3 id="测试高可用" tabindex="-1"><a class="header-anchor" href="#测试高可用" aria-hidden="true">#</a> 测试高可用</h3><ol><li>关闭<code>MyCat</code></li><li>通过虚拟<code>IP</code>查询数据<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-umycat</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.140.200 <span class="token parameter variable">-P</span> <span class="token number">48066</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h1 id="mycat-安全设置" tabindex="-1"><a class="header-anchor" href="#mycat-安全设置" aria-hidden="true">#</a> MyCat 安全设置</h1><h2 id="权限配置" tabindex="-1"><a class="header-anchor" href="#权限配置" aria-hidden="true">#</a> 权限配置</h2><h3 id="user-标签权限控制" tabindex="-1"><a class="header-anchor" href="#user-标签权限控制" aria-hidden="true">#</a> user 标签权限控制</h3><p>目前<code>MyCat</code>对于中间件的连接控制并没有做太复杂的控制，目前只做了中间件逻辑库级别的读<br>写权限控制。是通过<code>server.xml</code>的<code>user</code>标签进行配置。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- server.xml 配置文件 user 部分 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mycat<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>schemas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>TESTDB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>schemas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>TESTDB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>readOnly<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置说明" tabindex="-1"><a class="header-anchor" href="#配置说明" aria-hidden="true">#</a> 配置说明</h4><table><thead><tr><th>标签属性</th><th>说明</th></tr></thead><tbody><tr><td><code>name</code></td><td>应用连接中间件逻辑库的用户名</td></tr><tr><td><code>password</code></td><td>该用户对应的密码</td></tr><tr><td><code>TESTDB</code></td><td>应用当前连接的逻辑库中所对应的逻辑表，<code>schemas</code>中可以配置一个或多个</td></tr><tr><td><code>readOnly</code></td><td>应用连接中间件逻辑库所具有的权限<br><code>true</code>为只读，<code>false</code>为读写都有，默认为<code>false</code><br></td></tr></tbody></table><h4 id="测试案例一" tabindex="-1"><a class="header-anchor" href="#测试案例一" aria-hidden="true">#</a> 测试案例一</h4><p>使用<code>user</code>用户，权限为只读（<code>readOnly：true</code>），验证是否可以查询出数据，验证是否可以写入数据。</p><ol><li>用<code>user</code>用户登录<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-uuser</span> <span class="token parameter variable">-puser</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.140.128 <span class="token parameter variable">-P8066</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>切换到<code>TESTDB</code>数据库，查询<code>orders</code>表数据<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> TESTDB
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> orders<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>执行插入数据<code>sql</code>，可看到运行结果，插入失败，只有只读权限<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> orders<span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_type<span class="token punctuation">,</span>customer_id<span class="token punctuation">,</span>amount<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h4 id="测试案例二" tabindex="-1"><a class="header-anchor" href="#测试案例二" aria-hidden="true">#</a> 测试案例二</h4><p>使用<code>mycat</code>用户，权限为可读写（<code>readOnly：false</code>），验证是否可以查询出数据，验证是否可以写入数据。</p><ol><li>用<code>mycat</code>用户登录<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-umycat</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.140.128 <span class="token parameter variable">-P8066</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>切换到<code>TESTDB</code>数据库，查询<code>orders</code>表数据<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> TESTDB
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> orders<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>执行插入数据<code>sql</code>，可看到运行结果，插入成功<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> orders<span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_type<span class="token punctuation">,</span>customer_id<span class="token punctuation">,</span>amount<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="privileges-标签权限控制" tabindex="-1"><a class="header-anchor" href="#privileges-标签权限控制" aria-hidden="true">#</a> privileges 标签权限控制</h3><p>在<code>user</code>标签下的<code>privileges</code>标签可以对逻辑库（<code>schema</code>）、表（<code>table</code>）进行精细化的<code>DML</code>权限控制。<br><code>privileges</code>标签下的<code>check</code>属性，如为<code>true</code>开启权限检查，为<code>false</code>不开启，默认为<code>false</code>。</p><p>由于<code>Mycat</code>一个用户的<code>schemas</code>属性可配置多个逻辑库（<code>schema</code>） ，所以<code>privileges</code>的下级节点<code>schema</code>节点同样可配置多个，对多库多表进行细粒度的<code>DML</code>权限控制。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- server.xml 配置文件 privileges 部分 --&gt;</span>
<span class="token comment">&lt;!-- 配置 orders 表没有增删改查权限 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mycat<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>schemas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>TESTDB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 表级 DML 权限设置 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>privileges</span> <span class="token attr-name">check</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>schema</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TESTDB<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dml</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1111<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orders<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dml</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0000<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--&lt;table name=&quot;tb02&quot; dml=&quot;1111&quot;&gt;&lt;/table&gt;--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>schema</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>privileges</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置说明-1" tabindex="-1"><a class="header-anchor" href="#配置说明-1" aria-hidden="true">#</a> 配置说明</h4><table><thead><tr><th><code>DML</code>权限</th><th>增加（<code>insert</code>）</th><th>更新（<code>update</code>）</th><th>查询（<code>select</code>）</th><th>删除（<code>delete</code>）</th></tr></thead><tbody><tr><td>0000</td><td>禁止</td><td>禁止</td><td>禁止</td><td>禁止</td></tr><tr><td>0010</td><td>禁止<br></td><td>禁止</td><td>可以</td><td>禁止</td></tr><tr><td>1110</td><td>可以</td><td>禁止</td><td>禁止</td><td>禁止</td></tr><tr><td>1111</td><td>可以</td><td>可以</td><td>可以</td><td>可以</td></tr></tbody></table><h4 id="测试案例一-1" tabindex="-1"><a class="header-anchor" href="#测试案例一-1" aria-hidden="true">#</a> 测试案例一</h4><p>使用<code>mycat</code>用户，<code>privileges</code>配置<code>orders</code>表权限为禁止增删改查（<code>dml=&quot;0000&quot;</code>），验证是否可以查询出数据，验证是否可以写入数据。</p><ol><li>重启<code>MyCat</code>，用<code>mycat</code>用户登录<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-umycat</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.140.128 <span class="token parameter variable">-P8066</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>切换到<code>TESTDB</code>数据库，查询<code>orders</code>表数据，发现禁止该用户查询数据<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> TESTDB
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> orders<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>执行插入数据<code>sql</code>，可看到运行结果，禁止该用户插入数据<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> orders<span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_type<span class="token punctuation">,</span>customer_id<span class="token punctuation">,</span>amount<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h4 id="测试案例二-1" tabindex="-1"><a class="header-anchor" href="#测试案例二-1" aria-hidden="true">#</a> 测试案例二</h4><p>使用<code>mycat</code>用户，<code>privileges</code>配置<code>orders</code>表权限为可以增删改查（<code>dml=&quot;1111&quot;</code>），验证是否可以查询出数据，验证是否可以写入数据。</p><ol><li>重启<code>MyCat</code>，用<code>mycat</code>用户登录<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-umycat</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.140.128 <span class="token parameter variable">-P8066</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>切换到<code>TESTDB</code>数据库，查询<code>orders</code>表数据<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> TESTDB
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> orders<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>执行插入数据<code>sql</code>，可看到运行结果，插入成功<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> orders<span class="token punctuation">(</span>id<span class="token punctuation">,</span>order_type<span class="token punctuation">,</span>customer_id<span class="token punctuation">,</span>amount<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>执行删除数据<code>sql</code>，可看到运行结果，删除成功<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> orders <span class="token keyword">where</span> id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="sql-拦截" tabindex="-1"><a class="header-anchor" href="#sql-拦截" aria-hidden="true">#</a> SQL 拦截</h2><p><code>firewall</code>标签用来定义防火墙；<code>firewall</code>下<code>whitehost</code>标签用来定义<code>IP</code>白名单，<code>blacklist</code>用来定义<code>SQL</code>黑名单。</p><h3 id="白名单" tabindex="-1"><a class="header-anchor" href="#白名单" aria-hidden="true">#</a> 白名单</h3><p>可以通过设置白名单，实现某主机某用户可以访问<code>MyCat</code>，而其他主机用户禁止访问。</p><ol><li>设置白名单<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- server.xml 配置文件 firewall 标签 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>~--</span> <span class="token attr-name">配置只有</span> <span class="token attr-name">192.168.140.128</span> <span class="token attr-name">主机可以通过</span> <span class="token attr-name">mycat</span> <span class="token attr-name">用户访问</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>firewall</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>whitehost</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span> <span class="token attr-name">host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>192.168.140.128<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mycat<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>whitehost</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>firewall</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>重启<code>MyCat</code>后，<code>192.168.140.128</code>主机使用<code>mycat</code>用户访问，可以正常访问，使用<code>user</code>用户访问，禁止访问；在<code>192.168.140.127</code>主机用<code>mycat</code>用户访问，禁止访问<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-umycat</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.140.128 <span class="token parameter variable">-P</span> <span class="token number">8066</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="黑名单" tabindex="-1"><a class="header-anchor" href="#黑名单" aria-hidden="true">#</a> 黑名单</h3><p>可以通过设置黑名单，实现<code>MyCat</code>对具体<code>SQL</code>操作的拦截，如增删改查等操作的拦截。</p><ol><li>设置黑名单<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- server.xml 配置文件 firewall 标签 --&gt;</span>
<span class="token comment">&lt;!-- 配置禁止 mycat 用户进行删除操作 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>firewall</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>whitehost</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span> <span class="token attr-name">host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>192.168.140.128<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mycat<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>whitehost</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blacklist</span> <span class="token attr-name">check</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deleteAllow<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blacklist</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>firewall</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>重启<code>MyCat</code>后，<code>192.168.140.128</code>主机使用<code>mycat</code>用户访问，可以正常访问<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-umycat</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.140.128 <span class="token parameter variable">-P</span> <span class="token number">8066</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>切换<code>TESTDB</code>数据库后，执行删除数据语句，发现已禁止删除数据<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> orders <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>可以设置的黑名单<code>SQL</code>拦截功能列表：</p><table><thead><tr><th>配置项</th><th>缺省值</th><th>描述</th></tr></thead><tbody><tr><td><code>selelctAllow</code></td><td><code>true</code></td><td>是否允许执行<code>SELECT</code>语句</td></tr><tr><td><code>deleteAllow</code></td><td><code>true</code></td><td>是否允许执行<code>DELETE</code>语句</td></tr><tr><td><code>updateAllow</code></td><td><code>true</code></td><td>是否允许执行<code>UPDATE</code>语句</td></tr><tr><td><code>insertAllow</code></td><td><code>true</code><br></td><td>是否允许执行<code>INSERT</code>语句</td></tr><tr><td><code>createTableAllow</code></td><td><code>true</code></td><td>是否允许创建表</td></tr><tr><td><code>setAllow</code></td><td><code>true</code></td><td>是否允许使用<code>SET</code>语法</td></tr><tr><td><code>alterTableAllow</code></td><td><code>true</code></td><td>是否允许执行<code>Alter Table</code>语句</td></tr><tr><td><code>dropTableAllow</code></td><td><code>true</code></td><td>是否允许修改表</td></tr><tr><td><code>commitAllow</code></td><td><code>true</code></td><td>是否允许执行<code>commit</code>操作</td></tr><tr><td><code>rollbackAllow</code></td><td><code>true</code></td><td>是否允许执行<code>roll back</code>操作</td></tr></tbody></table><h1 id="mycat-监控工具" tabindex="-1"><a class="header-anchor" href="#mycat-监控工具" aria-hidden="true">#</a> MyCat 监控工具</h1><h2 id="mycat-web-简介" tabindex="-1"><a class="header-anchor" href="#mycat-web-简介" aria-hidden="true">#</a> MyCat-Web 简介</h2><p><code>Mycat-Web</code>是<code>MyCat</code>可视化运维的管理和监控平台，弥补了<code>MyCat</code>在监控上的空白。帮<code>MyCat</code>分<br>担统计任务和配置管理任务。<code>Mycat-Web</code>引入了<code>ZooKeeper</code>作为配置中心，可以管理多个节点。</p><p><code>Mycat-Ceb</code>主要管理和监控<code>MyCat</code>的流量、连接、活动线程和内存等，具备<code>IP</code>白名单、邮件告警等模块，还可以统计<code>SQL</code>并分析慢<code>SQL</code>和高频<code>SQL</code>等。为优化<code>SQL</code>提供依据。</p><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/mycat-web.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="mycat-web-配置使用" tabindex="-1"><a class="header-anchor" href="#mycat-web-配置使用" aria-hidden="true">#</a> MyCat-Web 配置使用</h2>`,59),M=n("code",null,"ZooKeeper",-1),S={href:"http://zookeeper.apache.org/",target:"_blank",rel:"noopener noreferrer"},A=a(`<li>安装包拷贝到<code>Linux</code>系统<code>/opt</code>目录下，并解压<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> zookeeper-3.4.11.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>进入<code>ZooKeeper</code>解压后的配置目录（<code>conf</code>），复制配置文件并改名<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> zoo_sample.cfg zoo.cfg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>进入<code>ZooKeeper</code>的命令目录（<code>bin</code>），运行启动命令<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./zkServer.sh start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,3),C=n("li",null,[n("code",null,"ZooKeeper"),s("服务端口为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"2181")]),n("annotation",{encoding:"application/x-tex"},"2181")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"2181")])])]),s("，查看服务已经启动"),n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"netstat"),s(),n("span",{class:"token parameter variable"},"-ant"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"grep"),s(),n("span",{class:"token number"},"2181"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])])],-1),R=n("code",null,"MyCat-Web",-1),N={href:"http://www.mycat.io",target:"_blank",rel:"noopener noreferrer"},I=a(`<li>安装包拷贝到<code>Linux</code>系统<code>/opt</code>目录下，并解压<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> Mycat-web-1.0-SNAPSHOT-20170102153329-linux.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>拷贝<code>mycat-web</code>文件夹到<code>/usr/local</code>目录下<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-r</span> mycat-web /usr/local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>进入<code>mycat-web</code>的目录下运行启动命令<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/mycat-web/
./start.sh <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>MyCat-Web</code>服务端口为 8082，查看服务已经启动<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-ant</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">8082</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>通过地址访问服务<code>http://192.168.140.127:8082/mycat/</code></li>`,5),L=n("li",null,[n("code",null,"MyCat-Web"),s("配置 "),n("ol",null,[n("li",null,[s("在注册中心配置"),n("code",null,"ZooKeeper"),s("地址，配置后刷新页面")]),n("li",null,[s("新增"),n("code",null,"MyCat"),s("监控实例")])])],-1),O=n("h2",{id:"mycat-性能监控指标",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mycat-性能监控指标","aria-hidden":"true"},"#"),s(" Mycat 性能监控指标")],-1),D=n("p",null,[s("在"),n("code",null,"Mycat-web"),s("上可以进行"),n("code",null,"Mycat"),s("性能监控，例如：内存分享、流量分析、连接分析、活动线程分析等等。")],-1);function P(H,U){const e=o("ExternalLinkIcon");return l(),c("div",null,[u,d,n("p",null,[n("a",r,[s("官网"),t(e)]),s("。")]),k,m,v,n("p",null,[s("![]("),n("a",b,[s("https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/integration-of-multiple-data"),t(e)]),s(" -sources.png)")]),g,h,y,q,n("p",null,[s("![]("),n("a",w,[s("https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/horizontal"),t(e)]),s(" -shard.png)")]),x,_,f,n("p",null,[s("![]("),n("a",T,[s("https://cdn.jsdelivr.net/gh/1coins/assets/mycat-summary/mycat-join-horizontal"),t(e)]),s(" -shard.png)")]),E,n("ol",null,[n("li",null,[M,s("安装 "),n("ol",null,[n("li",null,[n("a",S,[s("下载安装包"),t(e)])]),A,C])]),n("li",null,[R,s("安装 "),n("ol",null,[n("li",null,[n("a",N,[s("下载安装包"),t(e)])]),I])]),L]),O,D])}const K=p(i,[["render",P],["__file","mycat-summary.html.vue"]]);export{K as default};
