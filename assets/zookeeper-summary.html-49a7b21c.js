const e=JSON.parse('{"key":"v-ed8df82e","path":"/article/zookeeper/zookeeper-summary.html","title":"Zookeeper 总结","lang":"zh-CN","frontmatter":{"date":"2023-08-10T00:00:00.000Z","article":true,"timeline":true,"index":true,"title":"Zookeeper 总结","category":"Zookeeper","tag":["Zookeeper"],"description":"简介/快速入门 Zookeeper是一个集中的服务，用于维护配置信息、命名、提供分布式同步和提供组服务。所有这些类型的服务都以某种形式被分布式应用程序使用。每次它们被实现时，都会有大量的工作来修复不可避免的错误和竞争条件。由于实现这些服务的困难，应用程序最初通常会略过这些服务，这使得它们在出现更改时变得脆弱，并且难以管理。即使正确地执行了这些服务，在部署应用程序时，这些服务的不同实现也会导致管理复杂性。 Zookeeper由雅虎研究院开发，是Google Chubby的开源实现,后来托管到Apache,于2010年11月正式成为apache的顶级项目。","head":[["meta",{"property":"og:url","content":"https://1coins.github.io/article/zookeeper/zookeeper-summary.html"}],["meta",{"property":"og:site_name","content":"乾元"}],["meta",{"property":"og:title","content":"Zookeeper 总结"}],["meta",{"property":"og:description","content":"简介/快速入门 Zookeeper是一个集中的服务，用于维护配置信息、命名、提供分布式同步和提供组服务。所有这些类型的服务都以某种形式被分布式应用程序使用。每次它们被实现时，都会有大量的工作来修复不可避免的错误和竞争条件。由于实现这些服务的困难，应用程序最初通常会略过这些服务，这使得它们在出现更改时变得脆弱，并且难以管理。即使正确地执行了这些服务，在部署应用程序时，这些服务的不同实现也会导致管理复杂性。 Zookeeper由雅虎研究院开发，是Google Chubby的开源实现,后来托管到Apache,于2010年11月正式成为apache的顶级项目。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-21T16:04:04.000Z"}],["meta",{"property":"article:author","content":"乾元"}],["meta",{"property":"article:tag","content":"Zookeeper"}],["meta",{"property":"article:published_time","content":"2023-08-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-21T16:04:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Zookeeper 总结\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-21T16:04:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乾元\\",\\"url\\":\\"https://github.com/1coins\\",\\"email\\":\\"lau5464@126.com\\"}]}"]]},"headers":[{"level":2,"title":"结点状态 stat 的属性","slug":"结点状态-stat-的属性","link":"#结点状态-stat-的属性","children":[{"level":3,"title":"属性说明","slug":"属性说明","link":"#属性说明","children":[]},{"level":3,"title":"结点类型","slug":"结点类型","link":"#结点类型","children":[]}]},{"level":2,"title":"操作结点","slug":"操作结点","link":"#操作结点","children":[{"level":3,"title":"查询","slug":"查询","link":"#查询","children":[]},{"level":3,"title":"创建","slug":"创建","link":"#创建","children":[]},{"level":3,"title":"删除","slug":"删除","link":"#删除","children":[]},{"level":3,"title":"查看结点列表","slug":"查看结点列表","link":"#查看结点列表","children":[]}]},{"level":2,"title":"监听器","slug":"监听器","link":"#监听器","children":[]},{"level":2,"title":"Zookeeper 的 ACL 权限控制","slug":"zookeeper-的-acl-权限控制","link":"#zookeeper-的-acl-权限控制","children":[{"level":3,"title":"权限模式","slug":"权限模式","link":"#权限模式","children":[]},{"level":3,"title":"案例/远程登录","slug":"案例-远程登录","link":"#案例-远程登录","children":[]}]},{"level":2,"title":"连接到 Zookeeper","slug":"连接到-zookeeper","link":"#连接到-zookeeper","children":[]},{"level":2,"title":"新增节点","slug":"新增节点","link":"#新增节点","children":[]},{"level":2,"title":"修改节点","slug":"修改节点","link":"#修改节点","children":[]},{"level":2,"title":"删除节点","slug":"删除节点","link":"#删除节点","children":[]},{"level":2,"title":"查看节点","slug":"查看节点","link":"#查看节点","children":[]},{"level":2,"title":"查看子节点","slug":"查看子节点","link":"#查看子节点","children":[]},{"level":2,"title":"检查节点是否存在","slug":"检查节点是否存在","link":"#检查节点是否存在","children":[]},{"level":2,"title":"watcher 概念","slug":"watcher-概念","link":"#watcher-概念","children":[]},{"level":2,"title":"Watcher 架构","slug":"watcher-架构","link":"#watcher-架构","children":[]},{"level":2,"title":"Watcher 特性","slug":"watcher-特性","link":"#watcher-特性","children":[]},{"level":2,"title":"Watcher 接口设计","slug":"watcher-接口设计","link":"#watcher-接口设计","children":[{"level":3,"title":"Watcher 通知状态（KeeperState）","slug":"watcher-通知状态-keeperstate","link":"#watcher-通知状态-keeperstate","children":[]},{"level":3,"title":"Watcher 事件类型（EventType）","slug":"watcher-事件类型-eventtype","link":"#watcher-事件类型-eventtype","children":[]},{"level":3,"title":"捕获相应的事件","slug":"捕获相应的事件","link":"#捕获相应的事件","children":[]}]},{"level":2,"title":"注册 Watcher 的方法","slug":"注册-watcher-的方法","link":"#注册-watcher-的方法","children":[{"level":3,"title":"客户端与服务器端的连接状态","slug":"客户端与服务器端的连接状态","link":"#客户端与服务器端的连接状态","children":[]},{"level":3,"title":"Watcher 检查节点","slug":"watcher-检查节点","link":"#watcher-检查节点","children":[]},{"level":3,"title":"配置中心案例","slug":"配置中心案例","link":"#配置中心案例","children":[]},{"level":3,"title":"分布式唯一id案例","slug":"分布式唯一id案例","link":"#分布式唯一id案例","children":[]},{"level":3,"title":"分布式锁","slug":"分布式锁","link":"#分布式锁","children":[]}]},{"level":2,"title":"一致性协议——zab 协议","slug":"一致性协议——zab-协议","link":"#一致性协议——zab-协议","children":[]},{"level":2,"title":"leader 选举","slug":"leader-选举","link":"#leader-选举","children":[{"level":3,"title":"服务器状态","slug":"服务器状态","link":"#服务器状态","children":[]},{"level":3,"title":"observer 角色及其配置","slug":"observer-角色及其配置","link":"#observer-角色及其配置","children":[]},{"level":3,"title":"API 连接集群","slug":"api-连接集群","link":"#api-连接集群","children":[]}]},{"level":2,"title":"Curator 介绍","slug":"curator-介绍","link":"#curator-介绍","children":[{"level":3,"title":"Curator 简介","slug":"curator-简介","link":"#curator-简介","children":[]},{"level":3,"title":"基础用法","slug":"基础用法","link":"#基础用法","children":[]},{"level":3,"title":"四字监控命令/配置属性","slug":"四字监控命令-配置属性","link":"#四字监控命令-配置属性","children":[]}]}],"git":{"createdTime":1692633844000,"updatedTime":1692633844000,"contributors":[{"name":"1coins","email":"lau5464@126.com","commits":1}]},"readingTime":{"minutes":67.22,"words":20167},"filePathRelative":"article/zookeeper/zookeeper-summary.md","localizedDate":"2023年8月10日","excerpt":"<h1> 简介/快速入门</h1>\\n<p><code>Zookeeper</code>是一个集中的服务，用于维护配置信息、命名、提供分布式同步和提供组服务。所有这些类型的服务都以某种形式被分布式应用程序使用。每次它们被实现时，都会有大量的工作来修复不可避免的错误和竞争条件。由于实现这些服务的困难，应用程序最初通常会略过这些服务，这使得它们在出现更改时变得脆弱，并且难以管理。即使正确地执行了这些服务，在部署应用程序时，这些服务的不同实现也会导致管理复杂性。</p>\\n<p><code>Zookeeper</code>由雅虎研究院开发，是<code>Google Chubby</code>的开源实现,后来托管到<code>Apache</code>,于<code>2010年11月</code>正式成为<code>apache</code>的顶级项目。</p>","autoDesc":true}');export{e as data};
