import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as d,e as s,a as e,b as a}from"./app-3e6d2d9d.js";const i={},o=s(`<h1 id="主从复制简介" tabindex="-1"><a class="header-anchor" href="#主从复制简介" aria-hidden="true">#</a> 主从复制简介</h1><h2 id="互联网-三高-架构" tabindex="-1"><a class="header-anchor" href="#互联网-三高-架构" aria-hidden="true">#</a> 互联网“三高”架构</h2><ul><li>高并发</li><li>高性能</li><li>高可用</li></ul><h2 id="redis-是否高可用" tabindex="-1"><a class="header-anchor" href="#redis-是否高可用" aria-hidden="true">#</a> Redis 是否高可用</h2><p><strong>单机<code>Redis</code>的风险与问题：</strong></p><ul><li><p>问题 1：机器故障</p><ul><li>现象：硬盘故障、系统崩溃</li><li>本质：数据丢失，很可能对业务造成灾难性打击</li><li>结论：基本上会放弃使用<code>Redis</code></li></ul></li><li><p>问题 2：容量瓶颈</p><ul><li>现象：内存不足，从 16G 升级到 64G，从 64G 升级到 128G，无限升级内存</li><li>本质：穷，硬件条件跟不上</li><li>结论：放弃使用<code>Redis</code></li></ul></li></ul><p>结论：为了避免单点<code>Redis</code>服务器故障，准备多台服务器，互相连通。将数据复制多个副本保存在不同的服务器上，连接在一起，并保证数据是同步的。即使有其中一台服务器宕机，其他服务器依然可以继续提供服务，实现<code>Redis</code>的高可用，同时实现数据冗余备份。</p><h2 id="多台服务器连接方案" tabindex="-1"><a class="header-anchor" href="#多台服务器连接方案" aria-hidden="true">#</a> 多台服务器连接方案</h2><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-master-slave/master-and-slave.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p>提供数据方：<code>master</code></p><ul><li>主服务器、主节点、主库、主客户端</li></ul></li><li><p>接收数据方：<code>slave</code></p><ul><li>从服务器、从节点、从库、从客户端</li></ul></li><li><p>需要解决的问题：数据同步</p></li><li><p>核心工作：<code>master</code>的数据复制到<code>slave</code>中</p></li></ul><h2 id="主从复制" tabindex="-1"><a class="header-anchor" href="#主从复制" aria-hidden="true">#</a> 主从复制</h2><p>主从复制即将<code>master</code>中的数据即时、有效的复制到<code>slave</code>中。</p><p>特征：一个<code>master</code>可以拥有多个<code>slave</code>，一个<code>slave</code>只对应一个<code>master</code>。</p><p>职责：</p><ul><li><p><code>master</code></p><ul><li>写数据</li><li>执行写操作时，将出现变化的数据自动同步到<code>slave</code></li><li>读数据（可忽略）</li></ul></li><li><p><code>slave</code></p><ul><li>读数据</li><li>写数据（禁止）</li></ul></li></ul><h2 id="主从复制的作用" tabindex="-1"><a class="header-anchor" href="#主从复制的作用" aria-hidden="true">#</a> 主从复制的作用</h2><ul><li>读写分离：<code>master</code>写、<code>slave</code>读，提高服务器的读写负载能力</li><li>负载均衡：基于主从结构，配合读写分离，由<code>slave</code>分担<code>master</code>负载，并根据需求的变化，改变<code>slave</code>的数量，通过多个从节点分担数据读取负载，大大提高<code>Redis</code>服务器并发量与数据吞吐量</li><li>故障恢复：当<code>master</code>出现问题时，由<code>slave</code>提供服务，实现快速的故障恢复</li><li>数据冗余：实现数据热备份，是持久化之外的一种数据冗余方式</li><li>高可用基石：基于主从复制，构建哨兵模式与集群，实现<code>Redis</code>的高可用方案</li></ul><h1 id="主从复制工作流程" tabindex="-1"><a class="header-anchor" href="#主从复制工作流程" aria-hidden="true">#</a> 主从复制工作流程</h1><p>主从复制过程大体可以分为 3 个阶段：</p><ol><li>建立连接阶段（即准备阶段）</li><li>数据同步阶段</li><li>命令传播阶段</li></ol><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-master-slave/master-slave-operate-process1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-master-slave/master-slave-operate-process2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="建立连接阶段" tabindex="-1"><a class="header-anchor" href="#建立连接阶段" aria-hidden="true">#</a> 建立连接阶段</h2><p>建立<code>slave</code>到<code>master</code>的连接，使<code>master</code>能够识别<code>slave</code>，并保存<code>slave</code>端口号。</p><h3 id="工作流程" tabindex="-1"><a class="header-anchor" href="#工作流程" aria-hidden="true">#</a> 工作流程</h3><ol><li>设置<code>master</code>的地址和端口，保存<code>master</code>信息</li><li>建立<code>socket</code>连接</li><li>发送<code>ping</code>命令（定时器任务）</li><li>身份验证</li><li>发送<code>slave</code>端口信息</li></ol><p>至此，主从连接成功！</p><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-master-slave/create-connection.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>状态：</p><ul><li><code>slave</code>：保存<code>master</code>的地址与端口</li><li><code>master</code>：保存<code>slave</code>的端口</li><li>总体：之间创建了连接的<code>socket</code></li></ul><h3 id="主从连接-slave-连接-master" tabindex="-1"><a class="header-anchor" href="#主从连接-slave-连接-master" aria-hidden="true">#</a> 主从连接（slave 连接 master）</h3><ul><li><p>方式一：客户端发送命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>slaveof <span class="token operator">&lt;</span>masterip<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>masterport<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p><code>slave</code>客户端</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token punctuation">[</span>echo@centos ~<span class="token punctuation">]</span>$ <span class="token function">sudo</span> redis-cli <span class="token parameter variable">-p</span> <span class="token number">6380</span>
 <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> slaveof <span class="token number">127.0</span>.0.1 <span class="token number">6379</span>
 OK
 <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>master</code>主机</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> Starting BGSAVE <span class="token keyword">for</span> SYNC with target: disk
 Background saving started by pid <span class="token number">4837</span>
 DB saved on disk
 <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>master</code>客户端</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token punctuation">[</span>echo@centos ~<span class="token punctuation">]</span>$ <span class="token function">sudo</span> redis-cli <span class="token parameter variable">-p</span> <span class="token number">6379</span>
 <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name itheima
 OK
 <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>slave</code>客户端</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token punctuation">[</span>echo@centos ~<span class="token punctuation">]</span>$ <span class="token function">sudo</span> redis-cli <span class="token parameter variable">-p</span> <span class="token number">6380</span>
 <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> slaveof <span class="token number">127.0</span>.0.1 <span class="token number">6379</span>
 OK
 <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get name
 <span class="token string">&quot;itheima&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>方式二：启动服务器参数</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>redis-server <span class="token parameter variable">-slaveof</span> <span class="token operator">&lt;</span>masterip<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>masterport<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>slave</code>客户端</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token punctuation">[</span>echo@centos ~<span class="token punctuation">]</span>$ <span class="token function">sudo</span> redis-server /etc/redis/redis-6380.conf <span class="token parameter variable">--slaveof</span> <span class="token number">127.0</span>.0.1 <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><code>master</code>客户端</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token punctuation">[</span>echo@centos ~<span class="token punctuation">]</span>$ <span class="token function">sudo</span> redis-cli <span class="token parameter variable">-p</span> <span class="token number">6379</span>
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name itheima
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name itcast
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>slave</code>客户端</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token punctuation">[</span>echo@centos ~<span class="token punctuation">]</span>$ <span class="token function">sudo</span> redis-cli <span class="token parameter variable">-p</span> <span class="token number">6380</span>
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> slaveof <span class="token number">127.0</span>.0.1 <span class="token number">6379</span>
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get name
  <span class="token string">&quot;itheima&quot;</span>
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get name
  <span class="token string">&quot;itcast&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>方式三：服务器配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>slaveof <span class="token operator">&lt;</span>masterip<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>masterport<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在 redis-6379.conf 中添加配置</span>
slaveof <span class="token number">127.0</span>.0.1 <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>master</code>客户端</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token punctuation">[</span>echo@centos ~<span class="token punctuation">]</span>$ <span class="token function">sudo</span> redis-cli <span class="token parameter variable">-p</span> <span class="token number">6379</span>
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name itheima
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name itcast
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name it
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>slave</code>客户端</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token punctuation">[</span>echo@centos ~<span class="token punctuation">]</span>$ <span class="token function">sudo</span> redis-cli <span class="token parameter variable">-p</span> <span class="token number">6380</span>
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get name
  <span class="token string">&quot;itheima&quot;</span>
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get name
  <span class="token string">&quot;itcast&quot;</span>
  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get name
  <span class="token string">&quot;it&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>slave</code>系统信息</p><ul><li><code>master_link_down_since_seconds</code></li><li><code>masterhost</code></li><li><code>masterport</code></li></ul></li><li><p><code>master</code>系统信息</p><ul><li><code>slave_listening_port</code>（多个）</li></ul></li></ul><h3 id="主从断开连接" tabindex="-1"><a class="header-anchor" href="#主从断开连接" aria-hidden="true">#</a> 主从断开连接</h3><ul><li><p>客户端发送命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># slave 客户端发送命令</span>
slaveof no one
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：<code>slave</code>断开连接后，不会删除已有数据，只是不再接受<code>master</code>发送的数据</p></li></ul><h3 id="授权访问" tabindex="-1"><a class="header-anchor" href="#授权访问" aria-hidden="true">#</a> 授权访问</h3><ul><li><p><code>master</code>客户端发送命令设置密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>requirepass <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>master</code>配置文件设置密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>config <span class="token builtin class-name">set</span> requirepass <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span>
config get requirepass
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>slave</code>客户端发送命令设置密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>auth <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>slave</code>配置文件设置密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>masterauth <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>slave</code>启动服务器设置密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>redis-server –a <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="数据同步阶段" tabindex="-1"><a class="header-anchor" href="#数据同步阶段" aria-hidden="true">#</a> 数据同步阶段</h2><p>在<code>slave</code>初次连接<code>master</code>后，复制<code>master</code>中的所有数据到<code>slave</code>，将<code>slave</code>的数据库状态更新成<code>master</code>当前的数据库状态。</p><h3 id="工作流程-1" tabindex="-1"><a class="header-anchor" href="#工作流程-1" aria-hidden="true">#</a> 工作流程</h3><ol><li>请求同步数据</li><li>创建<code>RDB</code>同步数据</li><li>恢复<code>RDB</code>同步数据</li><li>请求部分同步数据</li><li>恢复部分同步数据</li></ol><p>至此，数据同步工作完成！</p><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-master-slave/data-sync.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>状态：</p><ul><li><code>slave</code>：具有<code>master</code>端全部数据，包含<code>RDB</code>过程接收的数据</li><li><code>master</code>：保存<code>slave</code>当前数据同步的位置</li><li>总体：之间完成了数据克隆</li></ul><h3 id="数据同步阶段-master-说明" tabindex="-1"><a class="header-anchor" href="#数据同步阶段-master-说明" aria-hidden="true">#</a> 数据同步阶段 master 说明</h3><ol><li><p>如果<code>master</code>数据量巨大，数据同步阶段应避开流量高峰期，避免造成<code>master</code>阻塞，影响业务正常执行</p></li><li><p>复制缓冲区大小设定不合理，会导致数据溢出。如进行全量复制周期太长，进行部分复制时发现数据已经存在丢失的情况，必须进行第二次全量复制，致使<code>slave</code>陷入死循环状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 配置文件中修改缓冲区大小</span>
repl-backlog-size 1mb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>master</code>单机内存占用主机内存的比例不应过大，建议使用 50% - 70% 的内存，留下 30% - 50% 的内存用于执行<code>bgsave</code>命令和创建复制缓冲区</p></li></ol><h3 id="数据同步阶段-slave-说明" tabindex="-1"><a class="header-anchor" href="#数据同步阶段-slave-说明" aria-hidden="true">#</a> 数据同步阶段 slave 说明</h3><ol><li><p>为避免<code>slave</code>进行全量复制、部分复制时服务器响应阻塞或数据不同步，建议关闭此期间的对外服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 配置文件中关闭 slave 服务器对外服务</span>
slave-serve-stale-data <span class="token function">yes</span><span class="token operator">|</span>no
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>数据同步阶段，<code>master</code>发送给<code>slave</code>信息可以理解<code>master</code>是<code>slave</code>的一个客户端，主动向<code>slave</code>发送命令</p></li><li><p>多个<code>slave</code>同时对<code>master</code>请求数据同步，<code>master</code>发送的<code>RDB</code>文件增多，会对带宽造成巨大冲击，如果<code>master</code>带宽不足，因此数据同步需要根据业务需求，适量错峰</p></li><li><p><code>slave</code>过多时，建议调整拓扑结构，由一主多从结构变为树状结构，中间的节点既是<code>master</code>，也是<code>slave</code>；注意使用树状结构时，由于层级深度，导致深度越高的<code>slave</code>与最顶层<code>master</code>间数据同步延迟较大，数据一致性变差，应谨慎选择</p></li></ol><h2 id="命令传播阶段" tabindex="-1"><a class="header-anchor" href="#命令传播阶段" aria-hidden="true">#</a> 命令传播阶段</h2><p>当<code>master</code>数据库状态被修改后，导致主从服务器数据库状态不一致，此时需要让主从数据同步到一致的状态，同步的动作称为<strong>命令传播</strong>。</p><p><code>master</code>将接收到的数据变更命令发送给<code>slave</code>，<code>slave</code>接收命令后执行命令。</p><h3 id="命令传播阶段的部分复制" tabindex="-1"><a class="header-anchor" href="#命令传播阶段的部分复制" aria-hidden="true">#</a> 命令传播阶段的部分复制</h3><ul><li><p>命令传播阶段出现了断网现象</p><ul><li>网络闪断闪连 操作：忽略</li><li>短时间网络中断 操作：部分复制</li><li>长时间网络中断 操作：全量复制</li></ul></li><li><p>部分复制的三个核心要素</p><ul><li>服务器的运行<code>id(run id)</code></li><li>主服务器的复制积压缓冲区</li><li>主从服务器的复制偏移量</li></ul></li></ul><h3 id="服务器运行-id-runid" tabindex="-1"><a class="header-anchor" href="#服务器运行-id-runid" aria-hidden="true">#</a> 服务器运行 ID（RunID）</h3><ul><li>概念：服务器运行<code>ID</code>是每一台服务器每次运行的身份识别码，一台服务器多次运行可以生成多个运行<code>ID</code></li><li>组成：运行<code>ID</code>由 40 位字符组成，是一个随机的十六进制字符。例如：<code>fdc9ff13b9bbaab28db42b3d50f852bb5e3fcdce</code></li><li>作用：运行<code>ID</code>被用于在服务器间进行传输，识别身份。如果想两次操作均对同一台服务器进行，必须每次操作携带对应的运行<code>ID</code>，用于对方识别</li><li>实现方式：运行<code>ID</code>在每台服务器启动时自动生成的，<code>master</code>在首次连接<code>slave</code>时，会将自己的运行<code>ID</code>发送给<code>slave</code>，<code>slave</code>保存此<code>ID</code>，通过<code>info server</code>命令，可以查看节点的<code>RunID</code></li></ul><h3 id="复制缓冲区" tabindex="-1"><a class="header-anchor" href="#复制缓冲区" aria-hidden="true">#</a> 复制缓冲区</h3><p>复制缓冲区，又名复制积压缓冲区，是一个先进先出（<code>FIFO</code>）的队列，用于存储服务器执行过的命令，每次传播命令，<code>master</code>都会将传播的命令记录下来，并存储在复制缓冲区。</p><p>复制缓冲区默认数据存储空间大小是 1M，由于存储空间大小是固定的，当入队元素的数量大于队列长度时，最先入队的元素会被弹出，而新元素会被放入队列。</p><ul><li>由来：每台服务器启动时，如果开启有<code>AOF</code>或被连接成为<code>master</code>节点，即创建复制缓冲区</li><li>作用：用于保存<code>master</code>收到的所有指令（仅影响数据变更的指令，例如<code>set</code>，<code>select</code>）</li><li>数据来源：当<code>master</code>接收到主客户端的指令时，除了将指令执行，会将该指令存储到缓冲区中</li></ul><h4 id="复制缓冲区内部工作原理" tabindex="-1"><a class="header-anchor" href="#复制缓冲区内部工作原理" aria-hidden="true">#</a> 复制缓冲区内部工作原理</h4><p>组成：</p><ul><li>偏移量</li><li>字节值</li></ul><p>工作原理：</p><ul><li>通过<code>offset</code>区分不同的<code>slave</code>当前数据传播的差异</li><li><code>master</code>记录已发送的信息对应的<code>offset</code></li><li><code>slave</code>记录已接收的信息对应的<code>offset</code></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-master-slave/copy-buffer-operate-principle.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="主从服务器复制偏移量-offset" tabindex="-1"><a class="header-anchor" href="#主从服务器复制偏移量-offset" aria-hidden="true">#</a> 主从服务器复制偏移量（offset）</h3><p>是一个数字，描述复制缓冲区中的指令字节位置。</p><p>分类：</p><ul><li><code>master</code>复制偏移量：记录发送给所有<code>slave</code>接收的指令字节对应的位置（多个）</li><li><code>slave</code>复制偏移量：记录<code>slave</code>接收<code>master</code>发送过来的指令字节对应的位置（一个）</li></ul><p>数据来源：</p><ul><li><code>master</code>端：发送一次记录一次</li><li><code>slave</code>端：接收一次记录一次</li></ul><p>作用：同步信息，比对<code>master</code>与<code>slave</code>的差异，当<code>slave</code>断线后，恢复数据使用</p><h2 id="数据同步-命令传播阶段工作流程" tabindex="-1"><a class="header-anchor" href="#数据同步-命令传播阶段工作流程" aria-hidden="true">#</a> 数据同步+命令传播阶段工作流程</h2><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-master-slave/data-sync-and-command-propagation.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="心跳机制" tabindex="-1"><a class="header-anchor" href="#心跳机制" aria-hidden="true">#</a> 心跳机制</h2><p>进入命令传播阶段候，<code>master</code>与<code>slave</code>间需要进行信息交换，使用心跳机制进行维护，实现双方连接保持在线。</p><p><code>master</code>心跳：</p><ul><li>指令：<code>ping</code></li><li>周期：由<code>repl-ping-slave-period</code>决定，默认 10 秒</li><li>作用：判断<code>slave</code>是否在线</li><li>查询：<code>INFO replication</code>获取<code>slave</code>最后一次连接时间间隔，<code>lag</code>项维持在 0 或 1 视为正常</li></ul><p><code>slave</code>心跳：</p><ul><li>指令：<code>REPLCONF ACK {offset}</code></li><li>周期：1 秒</li><li>作用 1：汇报<code>slave</code>自己的复制偏移量，获取最新的数据变更指令</li><li>作用 2：判断<code>master</code>是否在线</li></ul><h3 id="心跳阶段注意事项" tabindex="-1"><a class="header-anchor" href="#心跳阶段注意事项" aria-hidden="true">#</a> 心跳阶段注意事项</h3><ul><li><p>当<code>slave</code>多数掉线，或延迟过高时，<code>master</code>为保障数据稳定性，将拒绝所有信息同步操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>min-slaves-to-write <span class="token number">2</span>
min-slaves-max-lag <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>slave</code>数量少于 2 个，或者所有<code>slave</code>的延迟都大于等于 10 秒时，强制关闭<code>master</code>写功能，停止数据同步。</p></li><li><p><code>slave</code>数量由<code>slave</code>发送<code>REPLCONF ACK</code>命令做确认</p></li><li><p><code>slave</code>延迟由<code>slave</code>发送<code>REPLCONF ACK</code>命令做确认</p></li></ul><h2 id="主从复制工作流程-完整" tabindex="-1"><a class="header-anchor" href="#主从复制工作流程-完整" aria-hidden="true">#</a> 主从复制工作流程（完整）</h2><figure><img src="https://cdn.jsdelivr.net/gh/1coins/assets/redis-master-slave/master-slave-operate-process.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="主从复制常见问题" tabindex="-1"><a class="header-anchor" href="#主从复制常见问题" aria-hidden="true">#</a> 主从复制常见问题</h1><h2 id="频繁的全量复制" tabindex="-1"><a class="header-anchor" href="#频繁的全量复制" aria-hidden="true">#</a> 频繁的全量复制</h2><p>伴随着系统的运行，<code>master</code>的数据量会越来越大，一旦<code>master</code>重启，<code>runid</code>将发生变化，会导致全部<code>slave</code>的全量复制操作。</p><p>内部优化调整方案：</p><ol><li><p><code>master</code>内部创建<code>master_replid</code>变量，使用<code>runid</code>相同的策略生成，长度 41 位，并发送给所有<code>slave</code></p></li><li><p>在<code>master</code>关闭时执行命令<code>shutdown save</code>，进行<code>RDB</code>持久化,将<code>runid</code>与<code>offset</code>保存到<code>RDB</code>文件中</p><ul><li><code>repl-id repl-offset</code></li><li>通过<code>redis-check-rdb</code>命令可以查看该信息</li></ul></li><li><p><code>master</code>重启后加载<code>RDB</code>文件，恢复数据<br> 重启后，将<code>RDB</code>文件中保存的<code>repl-id</code>与<code>repl-offset</code>加载到内存中</p><ul><li><code>master_repl_id = repl master_repl_offset = repl-offset</code></li><li>通过<code>info</code>命令可以查看该信息</li></ul></li></ol><p>作用：本机保存上次<code>runid</code>，重启后恢复该值，使所有<code>slave</code>认为还是之前的<code>master</code>。</p><p>总结：</p><ul><li><p>问题现象：网络环境不佳，出现网络中断，<code>slave</code>不提供服务</p></li><li><p>问题原因：复制缓冲区过小，断网后<code>slave</code>的<code>offset</code>越界，触发全量复制</p></li><li><p>最终结果：<code>slave</code>反复进行全量复制</p></li><li><p>解决方案：修改复制缓冲区大小</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>repl-backlog-size
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>建议设置如下：</p><ol><li>测算从<code>master</code>到<code>slave</code>的重连平均时长<code>second</code></li><li>获取<code>master</code>平均每秒产生写命令数据总量<code>write_size_per_second</code></li><li>最优复制缓冲区空间 = <code>2 \\* second \\* write_size_per_second</code></li></ol></li></ul><h2 id="频繁的网络中断" tabindex="-1"><a class="header-anchor" href="#频繁的网络中断" aria-hidden="true">#</a> 频繁的网络中断</h2><p>问题现象：<code>master</code>的<code>CPU</code>占用过高或<code>slave</code>频繁断开连接。</p><p>问题原因：</p>`,95),c=e("ul",null,[e("li",null,[e("code",null,"slave"),a("每 1 秒发送"),e("code",null,"REPLCONF ACK"),a("命令到"),e("code",null,"master")]),e("li",null,[a("当"),e("code",null,"slave"),a("接到了慢查询时（"),e("code",null,"keys *"),a("，"),e("code",null,"hgetall"),a("等），会大量占用"),e("code",null,"CPU"),a("性能")]),e("li",null,[e("code",null,"master"),a("每 "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mn",null,"1")]),e("annotation",{encoding:"application/x-tex"},"1")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.6444em"}}),e("span",{class:"mord"},"1")])])]),a(" 秒调用复制定时函数"),e("code",null,"replicationCron()"),a("，比对"),e("code",null,"slave"),a("发现长时间没有进行响应")])],-1),r=s(`<p>最终结果：<code>master</code>各种资源（输出缓冲区、带宽、连接等）被严重占用。</p><p>解决方案：</p><ul><li><p>通过设置合理的超时时间，确认是否释放<code>slave</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>repl-timeout
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该参数定义了超时时间的阈值（默认 60 秒），超过该值，释放<code>slave</code>。</p></li></ul><p>问题现象：<code>slave</code>与<code>master</code>连接断开。</p><p>问题原因：</p><ul><li><code>master</code>发送<code>ping</code>指令频度较低</li><li><code>master</code>设定超时时间较短</li><li><code>ping</code>指令在网络中存在丢包</li></ul><p>解决方案：</p><ul><li><p>提高<code>ping</code>指令发送的频度</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>repl-ping-slave-period
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>超时时间<code>repl-time</code>的时间至少是<code>ping</code>指令频度的 5 到 10 倍，否则<code>slave</code>很容易判定超时。</p><h2 id="数据不一致" tabindex="-1"><a class="header-anchor" href="#数据不一致" aria-hidden="true">#</a> 数据不一致</h2><p>问题现象：多个<code>slave</code>获取相同数据不同步</p><p>问题原因：网络信息不同步，数据发送有延迟</p><p>解决方案：</p><ul><li><p>优化主从间的网络环境，通常放置在同一个机房部署，如使用阿里云等云服务器时要注意此现象</p></li><li><p>监控主从节点延迟（通过<code>offset</code>）判断，如果<code>slave</code>延迟过大，暂时屏蔽程序对该<code>slave</code>的数据访问</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>slave-serve-stale-data <span class="token function">yes</span><span class="token operator">|</span>no
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>开启后仅响应<code>info</code>、<code>slaveof</code>等少数命令（慎用，除非对数据一致性要求很高）。</p></li></ul>`,14),t=[o,c,r];function p(u,v){return l(),d("div",null,t)}const b=n(i,[["render",p],["__file","redis-master-slave.html.vue"]]);export{b as default};
